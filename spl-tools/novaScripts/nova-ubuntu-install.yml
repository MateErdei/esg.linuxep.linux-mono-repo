---
- hosts: all
  gather_facts: yes
  tasks:
    - name: Installing required packages - Ubuntu 18.04
      include: ansible/ubuntu-install-tasks.yml
      when: ansible_distribution == "Ubuntu" and ansible_distribution_version == '18.04'
    - name: Installing azure packages - Ubuntu 18.04
      include: ansible/azure-install-tasks.yml
      when: ansible_distribution == "Ubuntu" and ansible_distribution_version == '18.04'
    - name: Setting up nova directories
      file:
        path: ~/{{ item }}
        state: directory
      with_items:
        - .nova/db
        - .nova/ssl
        - .nova/rca
        - .nova/policy-fragments
        - .nova/stacValidatedUploadFiles
        - .nova/kinesalite
        - .nova/elasticsearch
        - .nova/postgres
        - .nova/cassandra
        - .docker
        - .local/bin
        - g/cloud/ui/build/webroot
    - name: Copy sandbox CA cert to .nova
      copy:
        src: '{{ nova_dir }}/sandbox-ca/cacerts/sb-ca.pem'
        dest: '~/.nova/ssl/sandbox-ca.cert'
    - name: Copy kinesa CA cert
      copy:
        src: '{{ nova_dir }}/appserver/ssl/ca-kinesalite.pem'
        dest: '~/.nova/ssl/ca-kinesalite.pem'
    - name: Generate SSL cert
      command: ./new_sandbox_cert.sh
      args:
        chdir: '{{ nova_dir }}/sandbox-ca'
    - name: Clean up after cert generation
      command: ./clean.sh
      args:
        chdir: '{{ nova_dir }}/sandbox-ca'
    - name: Setting up docker credentials
      copy:
        src: '{{ nova_dir }}/config.json'
        dest: '~/.docker/config.json'
    - name: Creating NOVA symlink
      file:
        src: '{{ nova_dir }}/nova'
        dest: '{{ nova_path }}'
        state: link
    - name: Enable dnsmasq in NetworkManager
      lineinfile:
        path: /etc/NetworkManager/NetworkManager.conf
        regexp: '^dns='
        insertafter: '^plugins=ifupdown,'
        line: 'dns=dnsmasq'
      become: true
      become_user: root
      tags: pure_ubuntu
      # - name: Manage DNS resolving by NetworkManager
      #file:
      #  src: /var/run/NetworkManager/resolv.conf
      #  dest: /etc/resolv.conf
      #  state: link
      # become: true
      # become_user: root
      #tags: pure_ubuntu
    - name: Copying dnsmasq.conf.ubuntu
      copy:
        src: '{{ nova_dir }}/dnsmasq.conf.ubuntu'
        dest: '/etc/NetworkManager/dnsmasq.d/dnsmasq.conf'
        backup: yes
      become: true
      become_user: root
      tags: pure_ubuntu
      #    - name: Configure DNS for docker
      #lineinfile:
      #  path: '/etc/default/docker'
      #  regexp: '^DOCKER_OPTS'
      #  line: 'DOCKER_OPTS="--dns=10.104.65.1 --dns=10.104.64.1 --dns=1.1.1.1"'
      #become: true
      #become_user: root
    - name: Configure DNS for docker - part 2
      copy:
        src: '{{ nova_dir }}/daemon.json'
        dest: '/etc/docker/daemon.json'
        backup: yes
      become: true
      become_user: root
    - name: Configure PATH for nova
      lineinfile:
        path: '~/.bashrc'
        line: 'PATH=~/.local/bin:$PATH'
    - name: Restart services
      service:
        name: '{{ item }}'
        state: restarted
      with_items:
        - NetworkManager
        - systemd-resolved.service
        - docker
      become: true
      become_user: root
      tags: pure_ubuntu
    - name: Copy mongorc.js file
      copy:
        src: '{{ nova_dir }}/mongodb/mongorc.js'
        dest: '~/.mongorc.js'
        force: 'no'
    - name: Create network nova_novanet
      shell: docker network create --driver=bridge --subnet=172.16.199.0/24 nova_novanet
      ignore_errors: yes
