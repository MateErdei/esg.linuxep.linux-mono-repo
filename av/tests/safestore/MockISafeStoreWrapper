// Copyright 2019-2022, Sophos Limited.  All rights reserved.

#include "../common/LogInitializedTests.h"
#include "safestore/IQuarantineManager.h"
#include "safestore/QuarantineManagerImpl.h"

#include <gmock/gmock.h>
#include <gtest/gtest.h>

using namespace safestore;
using namespace testing;

class MockISafeStoreWrapper : public ISafeStoreWrapper
{
public:
    MOCK_METHOD0(createSearchHandleHolder, std::shared_ptr<ISafeStoreSearchHandleHolder>());
    MOCK_METHOD0(createObjectHandleHolder, std::shared_ptr<ISafeStoreObjectHandleHolder>());
    MOCK_METHOD3(
        initialise,
        InitReturnCode(const std::string& dbDirName, const std::string& dbName, const std::string& password));
    MOCK_METHOD5(
        saveFile,
        SaveFileReturnCode(
            const std::string& directory,
            const std::string& filename,
            const std::string& threatId,
            const std::string& threatName,
            ISafeStoreObjectHandleHolder& objectHandle));
    MOCK_METHOD1(getConfigIntValue, std::optional<uint64_t>(ConfigOption option));
    MOCK_METHOD2(setConfigIntValue, bool(ConfigOption option, uint64_t value));
    MOCK_METHOD1(find, SearchResults(const SafeStoreFilter& filter));
    MOCK_METHOD3(
        findFirst,
        bool(
            const SafeStoreFilter& filter,
            ISafeStoreSearchHandleHolder& searchHandle,
            ISafeStoreObjectHandleHolder& objectHandle));
    MOCK_METHOD2(
        findNext,
        bool(ISafeStoreSearchHandleHolder& searchHandle, ISafeStoreObjectHandleHolder& objectHandle));
    MOCK_METHOD1(getObjectName, std::string(ISafeStoreObjectHandleHolder& objectHandle));
    MOCK_METHOD1(getObjectId, std::string(ISafeStoreObjectHandleHolder& objectHandle));
    MOCK_METHOD2(
        getObjectHandle,
        bool(const std::string& threatId, std::shared_ptr<ISafeStoreObjectHandleHolder> objectHandle));
    MOCK_METHOD1(finaliseObject, bool(ISafeStoreObjectHandleHolder& objectHandle));
};