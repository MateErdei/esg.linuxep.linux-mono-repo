<?xml version="1.0" encoding="utf-8"?>
<package name="sspl-plugin-mav" version="0.5.0">
    <versioning>
        <workingdir>sspl-plugin-mav-build/products/distribution/include/AutoVersioningHeaders</workingdir>
    </versioning>

    <inputs>
        <workingdir>sspl-plugin-mav-build</workingdir>
        <!-- DIFF SEPARATION COMMENT -->
        <!--Plugin Api Dev Build - This will check filer 6 getting the latest build-->
        <package name="sspl-base" version="master/%LASTGOODCOMPONENTBUILD%/sspl-base/1.0.1/output" dest="input" buildtype="dev">
            <include src="pluginapi.tar.gz" dest="."/>
        </package>
        <!--Plugin Api Production Build - Change values below to match the latest production build of base.
            On release, make sure you build a production build of base first before building any production builds of plugins-->
        <package name="sspl-base" version="0-5-0-592/214123/output" dest="input" buildtype="prod">
            <include src="pluginapi.tar.gz" dest="."/>
        </package>
        <package name="cmakelinux" version="3-11-2-4/213056/cmakelinux" dest="input">
            <include src="cmake-3.11.2-linux.tar.gz" dest="."/>
        </package>
        <package name="gcclinux" version="8-1-0-43/213047/gcclinux" dest="input">
            <include src="gcc-8.1.0-linux.tar.gz" dest="."/>
        </package>
        <package name="googletest" version="1-8-1/EES-8928" dest="input">
            <include src="googletest-release-1.8.1.tar.gz" dest="."/>
        </package>

        <!-- SUSI imports -->
        <package buildtype="dev" name="susi_libsavi" version="%LASTGOODBUILD%/libsavi-linuxamd64-gcc481/3.77.0" dest="build/_inputs" >
            <include src="libsavi/unix/libsavi/linux.amd64.glibc.2.3-gcc4.8.1/libsavi.so.3.*" dest="libsavi" />
            <include src="libsavi/unix/libsavi/linux.amd64.glibc.2.3-gcc4.8.1/libssp.so.0" dest="libsavi"  />
        </package>

        <!-- Data probably only needed for tests?
            For SDDS package will come from supplement
        -->
        <package name="vdl" version="5-61/214301" dest="build/_inputs" >
            <include src="supple/data" dest="vdb"  />
        </package>


        <!-- ML model comes from supplement??
          -->
        <package name="model-linux-x64" version="1-3/212025" dest="build/_inputs" >
            <include src="oempackage/linux-x64-model-gcc4.8.1.tar" dest="mllib"  />
        </package>

        <package name="model-data" version="20181226/214052" dest="build/_inputs" >
            <include src="oempackage/model.zip" dest="mlmodel" />
        </package>


        <package name="liblocalrep-linux-x86_64" version="1-0/212029" dest="build/_inputs" >
            <include src="release/liblocalrep.so" dest="lrlib" />
        </package>


        <!-- TODO (CORE-440): production build is not available yet for the fix of CPISSUE-6651 (!) -->
        <package buildtype="dev" name="CP-Trunk-6" internal_name="libsophtainer" version="20191114192501-2829570/libsophtainer-linuxamd64-glibc2_3/1.0.0" dest="build/_inputs" >
            <include src="package/libsophtainer.tar" dest="libsophtainer" mode="test" />
        </package>

        <package buildtype="dev" name="openssl" version="sophos-susi-OpenSSL_1_1_1c/%LASTGOODBUILD%/openssl-linux-x64-gcc740/1.1.1c" dest="build/_inputs" >
            <include src="release/lib" dest="openssl/lib" />
        </package>

        <!-- TODO: production build is not available yet (!) -->
        <package buildtype="dev" name="httpsrequester" version="master/%LASTGOODBUILD%/libglobalrep-linux-x64-gcc730/1.0.0" dest="build/_inputs" >
            <include src="lib" dest="gr/lib"/>
        </package>

        <!-- external dependencies -->
        <!-- TODO: production build is not available yet (!) -->
        <package buildtype="dev" name="boost" version="sophos-susi-boost-1.69.0/%LASTGOODBUILD%/boost-linux-x64-gcc740/1.69.0" dest="build/_inputs" >
            <include src="release/lib/libboost_locale.so.1.*" dest="boost" />
            <include src="release/lib/libboost_thread.so.1.*" dest="boost" />
        </package>

        <!-- TODO: production build is not available yet (!) -->
        <package buildtype="dev" name="icu" version="sophos-susi-icu-64.2/%LASTGOODBUILD%/icu-linux-x64-gcc740/64.2" dest="build/_inputs" >
            <include src="lib/libicudata.so.64.*" dest="icu/lib" />
            <include src="lib/libicui18n.so.64.*" dest="icu/lib" />
            <include src="lib/libicuuc.so.64.*" dest="icu/lib"/>
        </package>
        <!-- TODO: production build is not available yet (!) -->
        <package buildtype="dev" name="jsoncpp" version="sophos-susi-jsoncpp-1.8.4/%LASTGOODBUILD%/jsoncpp-linux-x64-gcc730/1.8.4" dest="build/_inputs" >
            <include src="release/lib/libjsoncpp.a" dest="jsoncpp/lib"/>
        </package>

        <!-- TODO: CORE-414: find a better way to do this, better place for it -->
        <package buildtype="dev" name="lrdata" version="sophos-susi-lrdata/%LASTGOODBUILD%/lrdata/2019061901" dest="build/_inputs" >
            <include src="reputation.zip" dest="lrdata" />
        </package>

        <package buildtype="dev" name="libarchive" version="sophos-susi-v3.4.0/%LASTGOODBUILD%/libarchive-linux-x64-gcc740/13.4.1" dest="build/_inputs" >
            <include src="lib/libarchive.so.13.*" dest="libarchive/lib" />
        </package>

        <!-- TODO: production build is not available yet (!) -->
        <package buildtype="dev" name="LuaJIT" version="sophos-eventprocessor_susi/%LASTGOODBUILD%/luajit-linux-x64-gcc740/2.0.5" dest="build/_inputs" >
            <include src="lib/libluajit-5.1.so.*" dest="luajit/lib" />
        </package>

    </inputs>
    <buildcommands>
        <command>
            <program>/bin/bash</program>
            <args>./build.sh --name sspl-plugin-mav</args>
            <workingdir>sspl-plugin-mav-build</workingdir>
        </command>
    </buildcommands>
    <publish>
        <workingdir>sspl-plugin-mav-build</workingdir>
        <destdir>sspl-plugin-mav</destdir>
        <buildoutputs>
            <output name="output" srcfolder="output"> </output>
            <output name="build_log" srcfolder="log"> </output>
        </buildoutputs>
        <publishbranches>master</publishbranches>
    </publish>
</package>
