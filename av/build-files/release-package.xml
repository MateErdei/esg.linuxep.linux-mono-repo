<?xml version="1.0" encoding="utf-8"?>
<package name="sspl-plugin-anti-virus" version="1.1.0">
    <versioning>
        <workingdir>./products/distribution/include/AutoVersioningHeaders</workingdir>
    </versioning>

    <inputs>
        <workingdir>.</workingdir>
        <!-- DIFF SEPARATION COMMENT -->
        <!--Plugin Api Candidate Build - Change values below to match the latest Candidate build of base.
            -->
        <build-asset project="linuxep" repo="everest-base">
            <release-version branch="release/2022-51.2"
                             build-id="20221214100149-722ef6d11670b3c8657d6e4d0b63e27ba84655d7-m6Gx0E"/>
            <development-version branch="develop"/>
            <include artifact-path="sspl-base/pluginapi" dest-dir="input"/>
            <include artifact-path="sspl-base/SDDS-COMPONENT" dest-dir="input/base-sdds"/>
        </build-asset>
        <build-asset project="core" repo="safestore">
            <release-version branch="release/2.0" build-id="20221202162039-b975b35677e594f034680ba4924c084aae98d4a0-zym8a1"/>
            <development-version branch="develop" />
            <include artifact-path="safestore/linux-x64/safestore_package" dest-dir="input/safestore_input"/>
        </build-asset>

        <build-asset project="winep" repo="sau">
            <release-version branch="release/sspl/Version_1_0_0"
                             build-id="20220825150631-43a7c87ceb5905f316aef54df45de777a5961022-O0LZyf"/>
            <development-version branch="develop"/>
            <include artifact-path="Linux-x64/SDDS3-Utils" dest-dir="input/sdds3"/>
        </build-asset>

        <build-asset project="thirdparty" repo="boost">
            <release-version branch="release/sspl/Version_1_78_0"
                             build-id="20220310141901-bdae372a9027e1760f105dc819023a49ef444765-xdQFp9"/>
            <include artifact-path="output" dest-dir="input"/>
        </build-asset>
        <build-asset project="thirdparty" repo="cmake">
            <release-version branch="release/sophos/v3.22.1"
                             build-id="20220412085321-29886e1a6f8ae2867207fa5c4873eaac5c6075a7-VxG3sr"/>
            <include artifact-path="cmake" dest-dir="input/cmake"/>
        </build-asset>
        <build-asset project="thirdparty" repo="gcc">
            <release-version branch="release/Version_11_2_0"
                             build-id="20220310091547-cf8f7ca9572a3bc9a68f05138086815341a49224-cZ84iF"/>
            <include artifact-path="output" dest-dir="input"/>
        </build-asset>
        <build-asset project="thirdparty" repo="googletest">
            <release-version branch="release/sspl/Version_1_11_0"
                             build-id="20220311153539-356cccfb1e6553d381af902d0dcc7f74379ececd-JevvWV"/>
            <include artifact-path="thirdparty/googletest/gmock-headers"
                     dest-dir="input/googletest/gmock-headers/gmock"/>
            <include artifact-path="thirdparty/googletest/gmock-libs" dest-dir="input/googletest/gmock-libs"/>
            <include artifact-path="thirdparty/googletest/gtest-headers"
                     dest-dir="input/googletest/gtest-headers/gtest"/>
            <include artifact-path="thirdparty/googletest/gtest-libs" dest-dir="input/googletest/gtest-libs"/>
        </build-asset>
        <build-asset project="thirdparty" repo="zlib">
            <release-version branch="release/sspl/Version_1_2_12" build-id="20220412084330-fbed66023e864153b2947dbffac57b6600587601-Z87Tnl"/>
            <include artifact-path="output" dest-dir="input"/>
        </build-asset>
        <!-- Need to compile our own messages -->
        <build-asset project="thirdparty" repo="capnproto">
            <release-version branch="release/sspl/Version_0_8_0"
                             build-id="20220314153844-e29cb764e609e0e34cd89aadd802d528f8020536-wQNt99"/>
            <include artifact-path="capnproto" dest-dir="input"/>
        </build-asset>

        <build-asset project="thirdparty" repo="openssl">
            <release-version branch="release/sspl/Version_1_1_1q"
                             build-id="20220725102623-b49f6c504d454be8e7bc6a7dc7f7528b53920bdc-iF7TY0"/>
            <include artifact-path="output" dest-dir="input"/>
        </build-asset>

        <!-- SUSI imports -->
        <build-asset project="core" repo="engine">
            <release-version branch="release/3.86.1"
                             build-id="20220901161552-8505ebffd3ae66bf2c01fcb27a95f36a1bb5b928-WELKtg"/>
            <include artifact-path="libsavi_linux64_release_gcc4-9-4glibc2-3-2" dest-dir="input/susi_input/libsavi"/>
            <include artifact-path="sophtainer_linux64_release_gcc4-9-4glibc2-3-4"
                     dest-dir="input/susi_input/libsophtainer"/>
        </build-asset>

        <build-asset project="core" repo="liblocalrep">
            <release-version branch="release/2.4"
                             build-id="20221209065757-cee305b5a39d3916a1555e5c0bcf3a8621ffcf32-eb08PU"/>
            <include artifact-path="release/linux64/bin" dest-dir="input/susi_input/lrlib"/>
        </build-asset>

        <build-asset project="core" repo="susi">
            <release-version branch="release/2.1"
                             build-id="20221209132720-fae151c9c7775ed3e9a58aa39ffa72b1780a30e9-lHbc9j"/>
            <include artifact-path="release/linux/libsusi" dest-dir="input/susi_input/susi/lib"/>
            <include artifact-path="release/linux/interface" dest-dir="input/susi_input/susi/include"/>
            <include artifact-path="release/linux/updater" dest-dir="input/susi_input/susi/lib"/>
            <include artifact-path="release/rules" dest-dir="input/susi_input/rules"/>
        </build-asset>

        <build-asset project="core" repo="httpsrequester">
            <release-version branch="release/1.2"
                             build-id="20220429060401-fa8db91f110608d19dfaaf3ea553081e11f3df2a-khtLXq"/>
            <include artifact-path="release/centos7/libglobalrep" dest-dir="input/susi_input/gr/lib"/>
        </build-asset>

        <!-- external dependencies -->
        <build-asset project="thirdparty" repo="icu">
            <release-version branch="release--sophos--susi--70.1"
                             build-id="20211122160606-cae4f46bbfdecde35f62a69e9b31f240348c0f8f-hYx1a2"/>
            <include artifact-path="linux-x64/lib" dest-dir="input/susi_input/icu/lib"/>
        </build-asset>

        <build-asset project="thirdparty" repo="libarchive">
            <release-version branch="release--sophos--core--3.5.2"
                             build-id="20220830091606-26250850af1ca762e02788c56d5b4a8c4c13c5e6-8fcn7J"/>
            <include artifact-path="release/linux-x64/lib" dest-dir="input/susi_input/libarchive/lib"/>
        </build-asset>

        <build-asset project="thirdparty" repo="luajit">
            <release-version branch="release--sophos--susi--2.1.0"
                             build-id="20211004080500-1a9d72db49c57f6eabb70705001bd654d3da99ed-NeJf83"/>
            <include artifact-path="linux-x64/lib" dest-dir="input/susi_input/luajit/lib"/>
        </build-asset>

        <build-asset project="thirdparty" repo="boost">
            <release-version branch="release--sophos--core--1.77.0"
                             build-id="20211126090955-ef33f0a539b87f97ee9e7e5b1220d25dc313589e-cB3kgN"/>
            <include artifact-path="linux-x64/lib" dest-dir="input/susi_input/boost"/>
        </build-asset>

        <build-asset project="thirdparty" repo="openssl">
            <release-version branch="release--sophos--susi--1.1.1n"
                             build-id="20220405102536-9699d5a9fc0e21e05bb42046076af371eb94a7ef-jw9CRv"/>
            <include artifact-path="openssl-linux-x64" dest-dir="input/susi_input/openssl/lib"/>
        </build-asset>


    </inputs>
    <buildcommands>
        <command mode="release,oldci">
            <program>/bin/bash</program>
            <args>./build.sh --ci --name av</args>
            <workingdir>.</workingdir>
        </command>
        <command mode="debug">
            <program>/bin/bash</program>
            <args>./build.sh --ci --name av --debug</args>
            <workingdir>.</workingdir>
        </command>
        <command mode="coverage">
            <program>/bin/bash</program>
            <args>./build.sh --ci --name av --esg-ci-coverage</args>
            <workingdir>.</workingdir>
        </command>
        <command mode="cppcheck">
            <program>/bin/bash</program>
            <args>./build.sh --ci --name av --cpp-check</args>
            <workingdir>.</workingdir>
        </command>
        <command mode="999">
            <program>/bin/bash</program>
            <args>./build.sh --ci --name av --999 --no-unit-test</args>
            <workingdir>.</workingdir>
        </command>
    </buildcommands>
    <publish>
        <workingdir>.</workingdir>
        <destdir>sspl-plugin-anti-virus</destdir>

        <release-asset artifact-path="sspl-plugin-anti-virus/SDDS-COMPONENT" source-dir="output/SDDS-COMPONENT"
                       mode="release"/>
        <release-asset artifact-path="sspl-plugin-anti-virus/SDDS3-PACKAGE" source-dir="output/SDDS3-PACKAGE"
                       mode="release"/>
        <release-asset artifact-path="sspl-plugin-anti-virus-999/SDDS-COMPONENT" source-dir="output/SDDS-COMPONENT"
                       mode="999"/>
        <release-asset artifact-path="sspl-plugin-anti-virus-999/SDDS3-PACKAGE" source-dir="output/SDDS3-PACKAGE"
                       mode="999"/>

        <build-asset artifact-path="output" source-dir="output" mode="release,debug">
        </build-asset>
        <build-asset artifact-path="coverage" source-dir="output" mode="coverage">
        </build-asset>
        <logs name="build_log" source-dir="log" mode="debug,release"/>
        <logs name="coverage_log" source-dir="log" mode="coverage"/>

        <build-asset artifact-path="tap_test_output" source-dir="output" mode="release">
            <include glob="tap_test_output.tar.gz"/>
        </build-asset>

        <build-asset artifact-path="coverage_tap_test_output" source-dir="output" mode="coverage">
            <include glob="tap_test_output.tar.gz"/>
        </build-asset>

        <buildoutputs>
            <!-- rename logs for coverage builds -->
            <output name="build_log" srcfolder="log" mode="oldci"></output>
            <output name="coverage_log" srcfolder="log" mode="oldcoverage"></output>

            <!-- rename output for coverage builds -->
            <output name="output" srcfolder="output" artifactpath="output" mode="oldci"></output>
        </buildoutputs>
        <publishbranches>master,develop,feature/LINUXDAR-2501-make-changes-necessary-to-use-2020.47-version-of-susi
        </publishbranches>
    </publish>
</package>
