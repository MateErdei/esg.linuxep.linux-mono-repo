
library "standardPipeline"

project = 'sspl-plugin-anti-virus'
version_key = '11.0.0'
project_gitrepo = 'ssh://git@stash.sophos.net:7999/linuxep/sspl-plugin-modular-anti-virus.git'
project_builddir = project
project_release_xml = 'build-files/release-package.xml'
buildAgentTemplate = 'JenkinsLinuxTemplate5'

if(env.DEPLOYMENT_TYPE){
    echo 'Doing a dev build'
    prodbuild = false
    devbuild = true
}
else {
    echo 'Doing a production build'
    prodbuild = true
    devbuild = false
}
env.CI_REPO_RELATIVE = 'true'

properties([
  parameters([
    string(name: 'CommitHash', defaultValue: ''),
    string(name: 'PortalId', defaultValue: ''),
    string(name: 'PortalAddress', defaultValue: ''),
    string(name: 'Mode', defaultValue: 'oldci')
  ])
])

skipDefaultCheckout()
try{
	version_number = GetVersionNumber(version_key, project)
    PreBuild(params, version_number, project)
    git_branch = "${env.BRANCH_NAME}"
    echo git_branch
    if (devbuild && (git_branch.endsWith("coverage") || git_branch == 'master'))
    {
        parallel Build:
        {
            echo 'Starting av master builds'
            ArtisanBuild(
                 buildAgentTemplate,
                 project_release_xml,
                 params.Mode,
                 version_number,
                 project_builddir
                 )
            echo 'Finished av master release build'
        },
        coverage_build:
        {
            echo 'Starting av master coverage build'
            ArtisanBuild(
                 buildAgentTemplate,
                 project_release_xml,
                 'coverage',
                 version_number,
                 project_builddir)
             echo 'Finished av master coverage build'
         }
    }
    else
    {
        echo 'Starting ticket branch av build'
        ArtisanBuild(buildAgentTemplate, project_release_xml, params.Mode, version_number, project_builddir)
        echo 'Finished ticket branch av build'
    }

    SuccessfulBuild(project_release_xml)

} catch(e){
    FailedBuild(e)
    error("Build failed: " + e.toString())
}
