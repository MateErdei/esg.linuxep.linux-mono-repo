<?xml version='1.0' encoding='utf-8'?>
<package name="sspl-plugin-edr-component" version="1.1.7">
    <versioning>
        <workingdir>./products/distribution/include/AutoVersioningHeaders</workingdir>
    </versioning>

    <inputs>
        <workingdir>.</workingdir>
        <build-asset project="linuxep" repo="everest-base">
            <release-version branch="release/2022-51"
                             build-id="20221202173457-a2db21866759920aa39555c15bbfcc09939fd16e-VpQpjR"/>
            <development-version branch="develop"/>
            <include artifact-path="sspl-base/pluginapi" dest-dir="/build/input"/>
            <include artifact-path="sspl-base/SDDS-COMPONENT" dest-dir="/build/input/base-sdds"/>
        </build-asset>

        <build-asset project="winep" repo="livequery">
            <release-version branch="release/2022.48"
                             build-id="20221118155025-d32692e307f68463daa6ac0c4c12701837edc13f-ckdn8Z"/>
            <development-version branch="develop"/>
            <include artifact-path="sspl-osquery-components" dest-dir="/build/input/sspl-osquery-components"/>
        </build-asset>
        <build-asset project="winep" repo="dbos">
            <release-version branch="release/2022-33-linux"
                             build-id="20220808155426-e2c6cc6ded74ea177ffee3faf6acb550fb085bfc-arqapF"/>
            <development-version branch="develop"/>
            <include artifact-path="linux-x64-extension" dest-dir="/build/input/linux-x64-extension"/>
        </build-asset>
        <build-asset project="winep" repo="sed">
            <release-version branch="release/SED_2022.48_libs"
                             build-id="20221117224033-2870ce2d8227b6dc85bed11690e109ebb0dd71b4-6WiNjb"/>
            <development-version branch="develop"/>
            <include artifact-path="sed-libs-linux/JournalLib-x64" dest-dir="/build/input"/>
        </build-asset>

        <build-asset project="em" repo="esg">
            <release-version branch="release/2023.04/sprint" build-id="20230120201925-31a0379094fc1654506d3d459661d326949dee47-bh0Sgz"/>
            <development-version branch="develop"/>
            <include artifact-path="sophlib/sdds3-tools-x64-linux" dest-dir="/build/input/sdds3"/>
        </build-asset>

        <build-asset project="thirdparty" repo="boost">
            <release-version branch="release/sspl/Version_1_78_0"
                             build-id="20220310141901-bdae372a9027e1760f105dc819023a49ef444765-xdQFp9"/>
            <include artifact-path="output" dest-dir="/build/input"/>
        </build-asset>
        <build-asset project="thirdparty" repo="cmake">
            <release-version branch="release/sophos/v3.22.1"
                             build-id="20220412085321-29886e1a6f8ae2867207fa5c4873eaac5c6075a7-VxG3sr"/>
            <include artifact-path="cmake" dest-dir="/build/redist/cmake"/>
        </build-asset>
        <build-asset project="thirdparty" repo="capnproto">
            <release-version branch="release/sspl/Version_0_8_0"
                             build-id="20220314153844-e29cb764e609e0e34cd89aadd802d528f8020536-wQNt99"/>
            <include artifact-path="capnproto" dest-dir="/build/input"/>
        </build-asset>
        <build-asset project="thirdparty" repo="gcc">
            <release-version branch="release/Version_11_2_0"
                             build-id="20220310091547-cf8f7ca9572a3bc9a68f05138086815341a49224-cZ84iF"/>
            <include artifact-path="output" dest-dir="/build/input"/>
        </build-asset>
        <build-asset project="thirdparty" repo="gflags">
            <release-version branch="release/sspl/Version_2_2_2"
                             build-id="20220311152651-46f2b36966eb0406fc90f5602339310309af1ab2-XYDhKJ"/>
            <include artifact-path="output" dest-dir="/build/input"/>
        </build-asset>
        <build-asset project="thirdparty" repo="glog">
            <release-version branch="release/sspl/Version_0_4_0"
                             build-id="20220314082521-27d6119d2fc83a6e47e5595c30fe4837f66fcbf0-j15Bo9"/>
            <include artifact-path="output" dest-dir="/build/input"/>
        </build-asset>
        <build-asset project="thirdparty" repo="jsoncpp">
            <release-version branch="release/sspl/Version_1_9_4"
                             build-id="20220311153906-f02cffa15c473a0ad01713ebc48cfec8ae2f8edb-UFvRK0"/>
            <include artifact-path="output" dest-dir="/build/input"/>
        </build-asset>
        <build-asset project="thirdparty" repo="openssl">
            <release-version branch="release/sspl/Version_1_1_1q"
                             build-id="20220725102623-b49f6c504d454be8e7bc6a7dc7f7528b53920bdc-iF7TY0"/>
            <include artifact-path="output" dest-dir="/build/input"/>
        </build-asset>
        <build-asset project="thirdparty" repo="protobuf">
            <release-version branch="release/sspl/Version_3_17_3"
                             build-id="20220310143632-66a638734ca9de06319cfc97fdd27ac200fdec15-yMZBAU"/>
            <include artifact-path="output" dest-dir="/build/input"/>
        </build-asset>
        <build-asset project="thirdparty" repo="sqlite">
            <release-version branch="release/Version_3_36_0"
                             build-id="20220310112434-e65ad9e5d9ee853b8f2462c7de8a648a62f1ba95-fLTYUt"/>
            <include artifact-path="sqlite-amalgamation" dest-dir="/build/input/sqlite-amalgamation"/>
        </build-asset>
        <build-asset project="thirdparty" repo="thrift">
            <release-version branch="release/sspl/Version_0_14_2"
                             build-id="20220727094638-d9af386276e633f1c908e5c90cf1fd2275c21197-v9nY0g"/>
            <include artifact-path="output" dest-dir="/build/input"/>
        </build-asset>

        <build-asset project="em" repo="esg">
            <development-version branch="feature/thirdparty/LINUXDAR-6727-update-minizip-ng-to-3.0.8"/>
            <include artifact-path="thirdparty/liblzma-linux-opt" dest-dir="/build/redist/lzma"/>
        </build-asset>
        <!-- MonoRepo -->
        <build-asset project="em" repo="esg">
            <!--            <release-version branch="thirdparty/googletest-linux-opt" build-id=""/>-->
            <development-version branch="develop"/>
            <include artifact-path="thirdparty/googletest-linux-opt" dest-dir="/build/input/googletest"/>
        </build-asset>

        <trusted-asset artifact-path="com.osquery/osquery/5.7.0/osquery-5.7.0-linux" dest-dir="/build/input"/>
    </inputs>
    <buildcommands>
        <!--<command buildtype="prod">-->
        <command mode="release,release-classic">
            <program>/bin/bash</program>
            <args>./build.sh --clean --name edr</args>
            <workingdir>.</workingdir>
        </command>

        <command mode="coverage">
            <program>/bin/bash</program>
            <args>./build.sh --clean --name edr --bullseye</args>
            <workingdir>.</workingdir>
        </command>

        <command mode="analysis">
            <program>/bin/bash</program>
            <args>./build.sh --no-build --name edr --analysis</args>
            <workingdir>.</workingdir>
        </command>

        <!-- 999 -->
        <command mode="999">
            <program>/bin/bash</program>
            <args>./build.sh --clean --name edr --999 --no-unit-test</args>
            <workingdir>.</workingdir>
        </command>

        <!-- LINUXDAR-851 un-comment code below to allow debug build option when agreed -->
        <!--<command buildtype="dev">>
            <program>/bin/bash</program>
            <args>./build.sh - -clean - -debug - -name edr</args> 'When put back remove spaces between hyphens'
            <workingdir>.</workingdir>
        </command> -->
    </buildcommands>
    <publish>
        <workingdir>.</workingdir>
        <!-- new unified pipeline -->
        <!-- change edr/sdds to a release asset -->
        <release-asset artifact-path="edr/SDDS-COMPONENT" source-dir="output/SDDS-COMPONENT" mode="release"/>
        <release-asset artifact-path="edr/SDDS3-PACKAGE" source-dir="output/SDDS3-PACKAGE" mode="release"/>
        <release-asset artifact-path="edr-999/SDDS-COMPONENT" source-dir="output/SDDS-COMPONENT" mode="999"/>
        <release-asset artifact-path="edr-999/SDDS3-PACKAGE" source-dir="output/SDDS3-PACKAGE" mode="999"/>

        <build-asset artifact-path="symbols" source-dir="output/symbols" mode="release"/>
        <build-asset artifact-path="schema" source-dir="output/schema" mode="release"/>
        <build-asset artifact-path="base/base-sdds" source-dir="output/base-sdds" mode="release"/>
        <build-asset artifact-path="componenttests" source-dir="output/componenttests" mode="release"/>
        <build-asset artifact-path="build_log" source-dir="output" mode="release">
            <include glob="./build.log"/>
        </build-asset>

        <build-asset artifact-path="sspl-edr-coverage/SDDS-COMPONENT" source-dir="output/SDDS-COMPONENT"
                     mode="coverage"/>
        <build-asset artifact-path="sspl-edr-coverage/unittest-htmlreport"
                     source-dir="output/coverage/sspl-plugin-edr-unittest" mode="coverage"/>
        <build-asset artifact-path="sspl-edr-coverage/symbols" source-dir="output/symbols" mode="coverage"/>
        <build-asset artifact-path="sspl-edr-coverage/base/base-sdds" source-dir="output/base-sdds" mode="coverage"/>
        <build-asset artifact-path="sspl-edr-coverage/componenttests" source-dir="output/componenttests"
                     mode="coverage"/>
        <build-asset artifact-path="sspl-edr-coverage/build_log" source-dir="output" mode="coverage">
            <include glob="./build.log"/>
        </build-asset>
        <build-asset artifact-path="sspl-edr-coverage/covfile" source-dir="output/" mode="coverage">
            <include glob="./*.cov"/>
        </build-asset>
        <build-asset artifact-path="analysis" source-dir="output/analysis/cppcheck" mode="analysis"/>

        <destdir>sspl-plugin-edr-component</destdir>
        <!--  Legacy build outputs to uk-filer6 -->
        <buildoutputs>
            <!-- Release -->
            <output name="output" srcfolder="output" artifactpath="output" mode="debug,release-classic"></output>
            <output name="build_log" srcfolder="log" mode="debug,release-classic"></output>

            <!-- Analysis -->
            <output name="analysis" srcfolder="output" artifactpath="_analysis" mode="analysis-classic"></output>
            <output name="analysis_build_log" srcfolder="log" artifactpath="analysis/build_log"
                    mode="analysis-classic"/>

        </buildoutputs>
        <publishbranches>master,feature,bugfix,release,develop</publishbranches>
    </publish>
</package>
