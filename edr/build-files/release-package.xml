<?xml version="1.0" encoding="utf-8"?>
<package name="sspl-plugin-edr-component" version="1.1.0">
    <versioning>
        <workingdir>./products/distribution/include/AutoVersioningHeaders</workingdir>
    </versioning>

    <inputs>
        <workingdir>.</workingdir>
        <!-- DIFF SEPARATION COMMENT -->
        <build-asset project="linuxep" repo="everest-base">
            <release-version branch="release/Version_1_1_4" build-id="20201127195344-e11284ba0a104cfc72371bdf70269681cf69bc0b-OV2T8T"/>
            <development-version branch="develop"/>
            <include artifact-path="sspl-base/pluginapi" dest-dir="input"/>
            <include artifact-path="sspl-base/SDDS-COMPONENT" dest-dir="input/base-sdds"/>
        </build-asset>
        <build-asset project="winep" repo="livequery">
            <release-version branch="release/2020-44-linux" build-id="20201029124003-8477070a030b3915d003b74a6c4e8a061272e06b-Jy7Ts2"/>
            <development-version branch="develop"/>
            <include artifact-path="sspl-osquery-components" dest-dir="input/sspl-osquery-components"/>
        </build-asset>
        <build-asset project="winep" repo="dbos">
            <development-version branch="develop"/>
            <include artifact-path="linux-x64-extension" dest-dir="input/linux-x64-extension"/>
        </build-asset>
        <package name="boostlinux11" version="1-74-0-5/221614/output" dest="input">
            <include src="boost.tar" dest="."/>
        </package>
        <package name="cmakelinux" version="3-11-2-4/213056/cmakelinux" dest="input">
            <include src="cmake-3.11.2-linux.tar.gz" dest="."/>
        </package>
        <package name="gcclinux" version="8-1-0-43/213047/gcclinux" dest="input">
            <include src="gcc-8.1.0-linux.tar.gz" dest="."/>
        </package>
        <package name="googletest" version="1-8-1/EES-8928" dest="input">
            <include src="googletest-release-1.8.1.tar.gz" dest="."/>
        </package>
        <trusted-asset artifact-path="com.osquery/osquery/4.5.1/osquery-4-5-1-linux" dest-dir="input/osquery"/>
        <package name="openssllinux11" version="1-1-1i-1/221620/output" dest="input">
            <include src="openssl.tar" dest="."/>
        </package>
        <package name="protobuflinux11" version="3-14-0-6/221619/output" dest="input">
            <include src="protobuf.tar" dest="."/>
        </package>
        <package name="gflagslinux11" version="2-2-2-10/218072/output" dest="input">
            <include src="gflags.tar" dest="."/>
        </package>
        <package name="gloglinux11" version="0-4-0-14/219062/output" dest="input">
            <include src="glog.tar" dest="."/>
        </package>
        <package name="thriftlinux11" version="0-13-0-15/221628/output" dest="input">
            <include src="thrift.tar" dest="."/>
        </package>
        <package name="sqlite-amalgamation" version="3-34-0-11/221627/sqlite-amalgamation" dest="input">
            <include src="sqlite-amalgamation-3340000.zip" dest="."/>
        </package>
        <package name="jsoncpplinux11" version="1-8-4-17/220379/output" dest="input">
            <include src="jsoncpp.tar" dest="."/>
        </package>

    </inputs>
    <buildcommands>
        <!--<command buildtype="prod">-->
        <command mode="release,release-classic">
            <program>/bin/bash</program>
            <args>./build.sh --clean --name edr</args>
            <workingdir>.</workingdir>
        </command>

        <command mode="coverage">
            <program>/bin/bash</program>
            <args>./build.sh --clean --name edr --bullseye </args>
            <workingdir>.</workingdir>
        </command>

        <command mode="analysis">
            <program>/bin/bash</program>
            <args>./build.sh --no-build --name edr --analysis</args>
            <workingdir>.</workingdir>
        </command>

        <!-- 999 -->
        <command mode="999">
            <program>/bin/bash</program>
            <args>./build.sh --clean --name edr --999 --no-unit-test</args>
            <workingdir>.</workingdir>
        </command>

        <!-- LINUXDAR-851 un-comment code below to allow debug build option when agreed -->
        <!--<command buildtype="dev">>
            <program>/bin/bash</program>
            <args>./build.sh - -clean - -debug - -name edr</args> 'When put back remove spaces between hyphens'
            <workingdir>.</workingdir>
        </command> -->
    </buildcommands>
    <publish>
        <workingdir>.</workingdir>
        <!-- new unified pipeline -->
        <!-- change edr/sdds to a release asset -->
        <release-asset artifact-path="edr/SDDS-COMPONENT" source-dir="output/SDDS-COMPONENT" mode="release"/>
        <release-asset artifact-path="edr-999/SDDS-COMPONENT" source-dir="output/SDDS-COMPONENT" mode="999"/>

        <build-asset artifact-path="symbols" source-dir="output/symbols" mode="release"/>
        <build-asset artifact-path="base/base-sdds" source-dir="output/base-sdds" mode="release"/>
        <build-asset artifact-path="componenttests" source-dir="output/componenttests" mode="release"/>
        <build-asset artifact-path="build_log" source-dir="output" mode="release">
            <include glob="./build.log" />
        </build-asset>

        <build-asset artifact-path="sspl-edr-coverage/SDDS-COMPONENT" source-dir="output/SDDS-COMPONENT" mode="coverage"/>
        <build-asset artifact-path="sspl-edr-coverage/unittest-htmlreport" source-dir="output/coverage/sspl-plugin-edr-unittest" mode="coverage"/>
        <build-asset artifact-path="sspl-edr-coverage/symbols" source-dir="output/symbols" mode="coverage"/>
        <build-asset artifact-path="sspl-edr-coverage/base/base-sdds" source-dir="output/base-sdds" mode="coverage"/>
        <build-asset artifact-path="sspl-edr-coverage/componenttests" source-dir="output/componenttests" mode="coverage"/>
        <build-asset artifact-path="sspl-edr-coverage/build_log" source-dir="output" mode="coverage">
            <include glob="./build.log" />
        </build-asset>
        <build-asset artifact-path="sspl-edr-coverage/covfile" source-dir="output/" mode="coverage">
            <include glob="./*.cov"/>
        </build-asset>

        <build-asset artifact-path="analysis" source-dir="output/analysis/cppcheck" mode="analysis"/>

        <destdir>sspl-plugin-edr-component</destdir>
        <!--  Legacy build outputs to uk-filer6 -->
        <buildoutputs>
            <!-- Release -->
            <output name="output" srcfolder="output" artifactpath="output" mode="debug,release-classic"> </output>
            <output name="build_log" srcfolder="log" mode="debug,release-classic"> </output>
            
            <!-- Analysis -->
            <output name="analysis" srcfolder="output" artifactpath="_analysis" mode="analysis-classic"> </output>
            <output name="analysis_build_log" srcfolder="log" artifactpath="analysis/build_log" mode="analysis-classic"/>

        </buildoutputs>
        <publishbranches>master,feature,bugfix,release,develop</publishbranches>
    </publish>
</package>
