<?xml version="1.0" encoding="utf-8"?><package name="sspl-plugin-edr-component" version="1.1.9">
    <versioning>
        <workingdir>./products/distribution/include/AutoVersioningHeaders</workingdir>
    </versioning>

    <inputs>
        <workingdir>.</workingdir>
        <build-asset project="linuxep" repo="everest-base">
            <release-version branch="release/2023-25" build-id="20230616165821-81df7cc5ab00d7ba628e90b427c29ac09f3abada-1YVMGa"/>
            <development-version branch="develop"/>
            <include artifact-path="sspl-base/pluginapi" dest-dir="/build/input"/>
            <include artifact-path="sspl-base/SDDS-COMPONENT" dest-dir="/build/input/base-sdds"/>
        </build-asset>

        <build-asset project="winep" repo="sed">
            <release-version branch="release--SED_3.1.3_libs" build-id="20230407201312-244216522f4f402e98d0eed06ac24f0ba48f1c56-66RGnJ"/>
            <development-version branch="develop"/>
            <include artifact-path="sed-libs-linux/JournalLib-x64" dest-dir="/build/input"/>
        </build-asset>

        <build-asset project="em" repo="esg">
<!--            <release-version branch="release/SPRINT-2023.28" build-id="20230707075000-ecc111df805b90609f0fa0f37951011bb53cf617-Jyt0UM"/>-->
            <development-version branch="develop"/>
            <include artifact-path="sophlib/linux_x64_rel/sdds3_tools" dest-dir="/build/redist/sdds3"/>
            <include artifact-path="common/livequery/linux_x64_rel/lib" dest-dir="/build/redist/livequery"/>
            <include artifact-path="common/livequery/include" dest-dir="/build/redist/livequery/common/livequery"/>

            <include artifact-path="thirdparty/liblzma-linux-opt" dest-dir="/build/redist/lzma"/>
            <include artifact-path="thirdparty/googletest-linux-opt" dest-dir="/build/redist/googletest"/>
            <include artifact-path="thirdparty/thrift-linux-opt" dest-dir="/build/redist/thrift"/>
            <include artifact-path="thirdparty/glog-linux-opt" dest-dir="/build/redist/glog"/>
            <include artifact-path="thirdparty/gflags-linux-opt" dest-dir="/build/redist/gflags"/>
            <include artifact-path="thirdparty/sqlite-linux-opt" dest-dir="/build/redist/sqlite"/>
            <include artifact-path="thirdparty/jsoncpp-linux-opt" dest-dir="/build/redist/jsoncpp"/>
            <include artifact-path="thirdparty/boost-linux-opt" dest-dir="/build/redist/boost"/>
        </build-asset>

        <build-asset project="thirdparty" repo="all">
            <release-version branch="release/2023.13" build-id="20230310172501-e459dfc33a663c014e4f901561e1e8190740fae8-kP30VN"/>
            <development-version branch="develop"/>
            <include artifact-path="openssl_3/openssl_linux64_gcc11-2glibc2-17" dest-dir="/build/redist/openssl"/>
        </build-asset>

        <build-asset project="thirdparty" repo="capnproto">
            <release-version branch="release/sspl/Version_0_8_0" build-id="20220314153844-e29cb764e609e0e34cd89aadd802d528f8020536-wQNt99"/>
            <include artifact-path="capnproto" dest-dir="/build/input"/>
        </build-asset>
        <build-asset project="thirdparty" repo="gcc">
            <release-version branch="release/Version_11_2_0" build-id="20220310091547-cf8f7ca9572a3bc9a68f05138086815341a49224-cZ84iF"/>
            <include artifact-path="output" dest-dir="/build/input"/>
        </build-asset>

        <build-asset project="thirdparty" repo="protobuf">
            <release-version branch="release/sspl/Version_3_17_3" build-id="20220310143632-66a638734ca9de06319cfc97fdd27ac200fdec15-yMZBAU"/>
            <include artifact-path="output" dest-dir="/build/input"/>
        </build-asset>

        <trusted-asset artifact-path="org.cmake/cmake-3.26.0/cmake-3.26.0" dest-dir="/build/redist/cmake"/>
        <trusted-asset artifact-path="com.osquery/osquery/5.8.2/osquery-5.8.2-linux" dest-dir="/build/redist"/>

        <!-- For local tests -->
        <!-- qp=em.esg/develop/build/scheduled-query-pack-sdds -->
        <!-- lp=em.esg/develop/build/endpoint-query-pack -->
        <build-asset project="em" repo="esg">
            <release-version branch="release--endpoint_query_pack" build-id="20230523003027-d3e9df61fbe371f11ec3bbf89204870a1de0d2f9-hmZQo4"/>
            <development-version branch="develop"/>
            <include artifact-path="endpoint-query-pack" dest-dir="local_test_input/lp"/>
        </build-asset>
        <build-asset project="em" repo="esg">
            <release-version branch="release/SPRINT-2023.19" build-id="20230505162223-6aa5715432cf60b858215a18280933fd7a890989-XeJDfq"/>
            <development-version branch="develop"/>
            <include artifact-path="scheduled-query-pack-sdds" dest-dir="local_test_input/qp"/>
        </build-asset>
    </inputs>
    <buildcommands>
        <!--<command buildtype="prod">-->
        <command mode="release,release-classic">
            <program>/bin/bash</program>
            <args>./build.sh --clean --name edr</args>
            <workingdir>.</workingdir>
        </command>

        <command mode="coverage">
            <program>/bin/bash</program>
            <args>./build.sh --clean --name edr --bullseye</args>
            <workingdir>.</workingdir>
        </command>

        <command mode="analysis">
            <program>/bin/bash</program>
            <args>./build.sh --no-build --name edr --analysis</args>
            <workingdir>.</workingdir>
        </command>

        <!-- 999 -->
        <command mode="999">
            <program>/bin/bash</program>
            <args>./build.sh --clean --name edr --999 --no-unit-test</args>
            <workingdir>.</workingdir>
        </command>

        <!-- LINUXDAR-851 un-comment code below to allow debug build option when agreed -->
        <!--<command buildtype="dev">>
            <program>/bin/bash</program>
            <args>./build.sh - -clean - -debug - -name edr</args> 'When put back remove spaces between hyphens'
            <workingdir>.</workingdir>
        </command> -->
    </buildcommands>
    <publish>
        <workingdir>.</workingdir>
        <!-- new unified pipeline -->
        <!-- change edr/sdds to a release asset -->
        <release-asset artifact-path="edr/SDDS-COMPONENT" source-dir="output/SDDS-COMPONENT" mode="release"/>
        <release-asset artifact-path="edr/SDDS3-PACKAGE" source-dir="output/SDDS3-PACKAGE" mode="release"/>
        <release-asset artifact-path="edr-999/SDDS-COMPONENT" source-dir="output/SDDS-COMPONENT" mode="999"/>
        <release-asset artifact-path="edr-999/SDDS3-PACKAGE" source-dir="output/SDDS3-PACKAGE" mode="999"/>

        <build-asset artifact-path="symbols" source-dir="output/symbols" mode="release"/>
        <build-asset artifact-path="schema" source-dir="output/schema" mode="release"/>
        <build-asset artifact-path="base/base-sdds" source-dir="output/base-sdds" mode="release"/>
        <build-asset artifact-path="componenttests" source-dir="output/componenttests" mode="release"/>
        <build-asset artifact-path="build_log" source-dir="output" mode="release">
            <include glob="./build.log"/>
        </build-asset>

        <build-asset artifact-path="sspl-edr-coverage/SDDS-COMPONENT" source-dir="output/SDDS-COMPONENT" mode="coverage"/>
        <build-asset artifact-path="sspl-edr-coverage/unittest-htmlreport" source-dir="output/coverage/sspl-plugin-edr-unittest" mode="coverage"/>
        <build-asset artifact-path="sspl-edr-coverage/symbols" source-dir="output/symbols" mode="coverage"/>
        <build-asset artifact-path="sspl-edr-coverage/base/base-sdds" source-dir="output/base-sdds" mode="coverage"/>
        <build-asset artifact-path="sspl-edr-coverage/componenttests" source-dir="output/componenttests" mode="coverage"/>
        <build-asset artifact-path="sspl-edr-coverage/build_log" source-dir="output" mode="coverage">
            <include glob="./build.log"/>
        </build-asset>
        <build-asset artifact-path="sspl-edr-coverage/covfile" source-dir="output/" mode="coverage">
            <include glob="./*.cov"/>
        </build-asset>
        <build-asset artifact-path="analysis" source-dir="output/analysis/cppcheck" mode="analysis"/>

        <destdir>sspl-plugin-edr-component</destdir>
        <!--  Legacy build outputs to uk-filer6 -->
        <buildoutputs>
            <!-- Release -->
            <output name="output" srcfolder="output" artifactpath="output" mode="debug,release-classic"/>
            <output name="build_log" srcfolder="log" mode="debug,release-classic"/>

            <!-- Analysis -->
            <output name="analysis" srcfolder="output" artifactpath="_analysis" mode="analysis-classic"/>
            <output name="analysis_build_log" srcfolder="log" artifactpath="analysis/build_log" mode="analysis-classic"/>

        </buildoutputs>
        <publishbranches>master,feature,bugfix,release,develop</publishbranches>
    </publish>
</package>
