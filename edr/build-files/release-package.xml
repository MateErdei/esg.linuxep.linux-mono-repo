<?xml version='1.0' encoding='utf-8'?>
<package name="sspl-plugin-edr-component" version="1.1.5">
    <versioning>
        <workingdir>./products/distribution/include/AutoVersioningHeaders</workingdir>
    </versioning>

    <inputs>
        <workingdir>.</workingdir>
        <build-asset project="linuxep" repo="everest-base">
            <release-version branch="release/2022-09" build-id="20220221084824-ace4c3223c45f194d3441e496f06a60574f40232-uNLJJ9"/>
            <development-version branch="develop"/>
            <include artifact-path="sspl-base/pluginapi" dest-dir="/build/input"/>
            <include artifact-path="sspl-base/SDDS-COMPONENT" dest-dir="/build/input/base-sdds"/>
        </build-asset>
        <build-asset project="winep" repo="livequery">
            <release-version branch="release/2022.09" build-id="20220222000603-b10fddd3d8dcb62008932cf235102415d65e395d-GCg2jP"/>
            <development-version branch="develop"/>
            <include artifact-path="sspl-osquery-components" dest-dir="/build/input/sspl-osquery-components"/>
        </build-asset>
        <build-asset project="winep" repo="dbos">
            <release-version branch="release/2022.09" build-id="20220217103314-2d4275c96d8d7b360af23080eb38be2e31bd2c4d-r8Qblh"/>
            <development-version branch="develop"/>
            <include artifact-path="linux-x64-extension" dest-dir="/build/input/linux-x64-extension"/>
        </build-asset>
        <build-asset project="winep" repo="sed">
            <release-version branch="release/SED_3.0.1_linux_libs" build-id="20210929204637-2500f58d99d60db61f6c2f61f9f2a02c533f50da-GFlHOK" />
            <development-version branch="develop"/>
            <include artifact-path="sed-libs-linux/JournalLib-x64" dest-dir="/build/input"/>
        </build-asset>
        <build-asset project="winep" repo="sau">
            <release-version branch="release/WINEP-2022.06" build-id="20220128115031-a862cc637baabe31c7c0807ca7b4836ed21d7bf1-YQAQrA"/>
            <include artifact-path="Linux-x64/SDDS3-Utils" dest-dir="/build/input/sdds3"/>
        </build-asset>
        <trusted-asset artifact-path="filer5-migrate/capnprotolinux11/0-8-0-17/222740/capnproto/capnproto.tar" dest-dir="/build/input"/>
        <trusted-asset artifact-path="filer5-migrate/boostlinux11/1-77-0-1/222969/output/boost.tar" dest-dir="/build/input/."/>
        <trusted-asset artifact-path="filer5-migrate/cmakelinux/3-11-2-4/213056/cmakelinux/cmake-3.11.2-linux.tar.gz" dest-dir="/build/input/."/>

        <trusted-asset artifact-path="filer5-migrate/xzutilslinux/5-2-4-25/222750/output/xzutils.tar" dest-dir="/build/input/."/>

        <trusted-asset artifact-path="filer5-migrate/gcclinux/8-1-0-43/213047/gcclinux/gcc-8.1.0-linux.tar.gz" dest-dir="/build/input/."/>
        <trusted-asset artifact-path="filer5-migrate/googletest/1-8-1/EES-8928/googletest-release-1.8.1.tar.gz" dest-dir="/build/input/."/>
        <trusted-asset artifact-path="com.osquery/osquery/5.1.0/osquery-5.1.0-linux" dest-dir="/build/input/osquery"/>
        <trusted-asset artifact-path="filer5-migrate/openssllinux11/1-1-1l-1/222963/output/openssl.tar" dest-dir="/build/input/."/>
        <trusted-asset artifact-path="filer5-migrate/protobuflinux11/3-17-3-1/222971/output/protobuf.tar" dest-dir="/build/input/."/>
        <trusted-asset artifact-path="filer5-migrate/gflagslinux11/2-2-2-10/218072/output/gflags.tar" dest-dir="/build/input/."/>
        <trusted-asset artifact-path="filer5-migrate/gloglinux11/0-4-0-14/219062/output/glog.tar" dest-dir="/build/input/."/>
        <trusted-asset artifact-path="filer5-migrate/thriftlinux11/0-14-2-2/222974/output/thrift.tar" dest-dir="/build/input/."/>
        <trusted-asset artifact-path="filer5-migrate/sqlite-amalgamation/3-36-0-4/222981/sqlite-amalgamation" dest-dir="/build/input/sqlite-amalgamation"/>
        <trusted-asset artifact-path="filer5-migrate/jsoncpplinux11/1-8-4-17/220379/output/jsoncpp.tar" dest-dir="/build/input/."/>
    </inputs>
    <buildcommands>
        <!--<command buildtype="prod">-->
        <command mode="release,release-classic">
            <program>/bin/bash</program>
            <args>./build.sh --clean --name edr</args>
            <workingdir>.</workingdir>
        </command>

        <command mode="coverage">
            <program>/bin/bash</program>
            <args>./build.sh --clean --name edr --bullseye</args>
            <workingdir>.</workingdir>
        </command>

        <command mode="analysis">
            <program>/bin/bash</program>
            <args>./build.sh --no-build --name edr --analysis</args>
            <workingdir>.</workingdir>
        </command>

        <!-- 999 -->
        <command mode="999">
            <program>/bin/bash</program>
            <args>./build.sh --clean --name edr --999 --no-unit-test</args>
            <workingdir>.</workingdir>
        </command>

        <!-- LINUXDAR-851 un-comment code below to allow debug build option when agreed -->
        <!--<command buildtype="dev">>
            <program>/bin/bash</program>
            <args>./build.sh - -clean - -debug - -name edr</args> 'When put back remove spaces between hyphens'
            <workingdir>.</workingdir>
        </command> -->
    </buildcommands>
    <publish>
        <workingdir>.</workingdir>
        <!-- new unified pipeline -->
        <!-- change edr/sdds to a release asset -->
        <release-asset artifact-path="edr/SDDS-COMPONENT" source-dir="output/SDDS-COMPONENT" mode="release"/>
        <release-asset artifact-path="edr/SDDS3-PACKAGE" source-dir="output/SDDS3-PACKAGE" mode="release"/>
        <release-asset artifact-path="edr-999/SDDS-COMPONENT" source-dir="output/SDDS-COMPONENT" mode="999"/>

        <build-asset artifact-path="symbols" source-dir="output/symbols" mode="release"/>
        <build-asset artifact-path="schema" source-dir="output/schema" mode="release"/>
        <build-asset artifact-path="base/base-sdds" source-dir="output/base-sdds" mode="release"/>
        <build-asset artifact-path="componenttests" source-dir="output/componenttests" mode="release"/>
        <build-asset artifact-path="build_log" source-dir="output" mode="release">
            <include glob="./build.log" />
        </build-asset>

        <build-asset artifact-path="sspl-edr-coverage/SDDS-COMPONENT" source-dir="output/SDDS-COMPONENT" mode="coverage"/>
        <build-asset artifact-path="sspl-edr-coverage/unittest-htmlreport" source-dir="output/coverage/sspl-plugin-edr-unittest" mode="coverage"/>
        <build-asset artifact-path="sspl-edr-coverage/symbols" source-dir="output/symbols" mode="coverage"/>
        <build-asset artifact-path="sspl-edr-coverage/base/base-sdds" source-dir="output/base-sdds" mode="coverage"/>
        <build-asset artifact-path="sspl-edr-coverage/componenttests" source-dir="output/componenttests" mode="coverage"/>
        <build-asset artifact-path="sspl-edr-coverage/build_log" source-dir="output" mode="coverage">
            <include glob="./build.log" />
        </build-asset>
        <build-asset artifact-path="sspl-edr-coverage/covfile" source-dir="output/" mode="coverage">
            <include glob="./*.cov"/>
        </build-asset>
        <build-asset artifact-path="analysis" source-dir="output/analysis/cppcheck" mode="analysis"/>

        <destdir>sspl-plugin-edr-component</destdir>
        <!--  Legacy build outputs to uk-filer6 -->
        <buildoutputs>
            <!-- Release -->
            <output name="output" srcfolder="output" artifactpath="output" mode="debug,release-classic"> </output>
            <output name="build_log" srcfolder="log" mode="debug,release-classic"> </output>
            
            <!-- Analysis -->
            <output name="analysis" srcfolder="output" artifactpath="_analysis" mode="analysis-classic"> </output>
            <output name="analysis_build_log" srcfolder="log" artifactpath="analysis/build_log" mode="analysis-classic"/>

        </buildoutputs>
        <publishbranches>master,feature,bugfix,release,develop</publishbranches>
    </publish>
</package>
