#!/usr/bin/env bash

# Copyright 2018 Sophos Limited.  All rights reserved.

PLUGIN_NAME=@PLUGIN_NAME@
COMPONENT_SUITE_LINE_ID="@COMPONENT_SUITE_LINE_ID@"

EXIT_FAIL_CREATE_DIRECTORY=10
EXIT_FAIL_FIND_GROUPADD=11
EXIT_FAIL_ADD_GROUP=12
EXIT_FAIL_FIND_USERADD=13
EXIT_FAIL_ADDUSER=14
EXIT_FAIL_FIND_GETENT=15
EXIT_FAIL_WDCTL_FAILED_TO_COPY=16
EXIT_FAIL_WDCTL_FAILED_TO_START=17
EXIT_FAIL_VERSIONEDCOPY=20

STARTINGDIR=$(pwd)
SCRIPTDIR=${0%/*}
if [[ "$SCRIPTDIR" == "$0" ]]
then
    SCRIPTDIR=${STARTINGDIR}
fi

ABS_SCRIPTDIR=$(cd $SCRIPTDIR && pwd)

source ${ABS_SCRIPTDIR}/cleanupinstall.sh

[[ -n "$DIST" ]] || DIST=$ABS_SCRIPTDIR

failure()
{
    local CODE=$1
    shift
    echo "$@" >&2
    exit $CODE
}
export DIST
export SOPHOS_INSTALL
export LD_LIBRARY_PATH="$SOPHOS_INSTALL/base/lib64"

USER_NAME=root
GROUP_NAME=root


#In case this is an upgrade request the watchdog stops the plugin
#A failure with exit code 2 will be ignored as this just means the plugin was not registered
#This could happen if a plugin is being freshly installed (e.g. for the first time)
"${SOPHOS_INSTALL}/bin/wdctl" stop "${PLUGIN_NAME}" &>/dev/null || [ $? == 2 ] || echo Failed to stop plugin: ${PLUGIN_NAME}

[[ -d $SOPHOS_INSTALL ]] || failure ${EXIT_FAIL_CREATE_DIRECTORY} "Failed to find installation directory: $SOPHOS_INSTALL"

#Create plugin registration file
TEMP_REG_FILE=${SOPHOS_INSTALL}/tmp/${PLUGIN_NAME}.json
sed "s;SOPHOS_INSTALL_VALUE;${SOPHOS_INSTALL};g" "${DIST}/files/base/pluginRegistry/${PLUGIN_NAME}.json" >  "${TEMP_REG_FILE}"
"${SOPHOS_INSTALL}/bin/wdctl" copyPluginRegistration "${TEMP_REG_FILE}" || failure ${EXIT_FAIL_WDCTL_FAILED_TO_COPY} "Failed to copy registration ${TEMP_REG_FILE}"
rm -f ${TEMP_REG_FILE}

#Install files
for F in $(find $DIST/files/plugins -type f)
do
    $SOPHOS_INSTALL/base/bin/versionedcopy $F || failure ${EXIT_FAIL_VERSIONEDCOPY} "Failed to copy $F to installation"
done

generate_manifest_diff $DIST ${COMPONENT_SUITE_LINE_ID}

mkdir -p ${SOPHOS_INSTALL}/plugins/${PLUGIN_NAME}/var/policy
rm -f ${SOPHOS_INSTALL}/plugins/${PLUGIN_NAME}/var/policy/mdr.xml
mkdir -p ${SOPHOS_INSTALL}/plugins/${PLUGIN_NAME}/edr/logs

chmod 0750 "${SOPHOS_INSTALL}/plugins/${PLUGIN_NAME}/bin/"*
#chmod 0750 "${SOPHOS_INSTALL}/plugins/${PLUGIN_NAME}/osquery/bin/"*

chown -R ${USER_NAME}:${GROUP_NAME} "${SOPHOS_INSTALL}/plugins/${PLUGIN_NAME}"

#Add in message relay configuration directory with correct permissions
mkdir -p ${SOPHOS_INSTALL}/var/sophosspl/mcs/current_connection/
chmod -R 0750 ${SOPHOS_INSTALL}/var/sophosspl/
chown -R sophos-spl-user:sophos-spl-group "${SOPHOS_INSTALL}/var/sophosspl/"

ln -s -f "${SOPHOS_INSTALL}/plugins/${PLUGIN_NAME}/bin/uninstall.sh" "${SOPHOS_INSTALL}/base/update/var/installedproducts/${COMPONENT_SUITE_LINE_ID}.sh"

if software_changed ${DIST} ${COMPONENT_SUITE_LINE_ID}
then
    perform_cleanup ${DIST} ${COMPONENT_SUITE_LINE_ID}
fi

copy_manifests ${DIST} ${COMPONENT_SUITE_LINE_ID}

#After install start the plugin
"${SOPHOS_INSTALL}/bin/wdctl" start "${PLUGIN_NAME}" || failure ${EXIT_FAIL_WDCTL_FAILED_TO_START} "Failed to start plugin ${PLUGIN_NAME}"
