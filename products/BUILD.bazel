# Copyright 2023-2024 Sophos Limited. All rights reserved.
load("//tools/config:sophos_stage_files.bzl", "soph_export_assets")
load("@bazel_skylib//lib:selects.bzl", "selects")
load("@rules_license//rules_gathering:generate_sbom.bzl", "generate_sbom")
load("//tools/config:sophos_asset.bzl", "soph_build_asset_pkg")

RELEASEABLE_ASSETS = [
    "//base:installer",
    "//deviceisolation:installer",
    "//eventjournaler:installer",
    "//response_actions:installer",
    "//liveterminal:installer",
    "//edr:installer",
    "//av:installer",
] + select({
    "//tools/config:linux_x64_rel": [
        "//thininstaller",
    ],
    "//tools/config:linux_arm64_rel": [],
    "//tools/config:linux_x64_dbg": [],
    "//tools/config:linux_arm64_dbg": [],
})

RELEASE_MODE_DEPS = [
    "//base:installer_symbols",
    "//deviceisolation:installer_symbols",
    "//eventjournaler:installer_symbols",
    "//response_actions:installer_symbols",
    "//liveterminal:installer_symbols",
    "//edr:installer_symbols",
    "//av:installer_symbols",
]

FUZZ_DEPS = [
    "//av:fuzz_test_assets",
    "//base:fuzz_test_assets",
    "//edr:fuzz_test_assets",
]

generate_sbom(
    name = "_sbom",
    out = "sbom.txt",
    deps = RELEASEABLE_ASSETS,
)

soph_build_asset_pkg(
    name = "sbom",
    srcs = [":_sbom"],
)

soph_export_assets(
    name = "export_assets",
    output_folder = ".output",
    release_package = "//build:release-package.xml",
    deps = RELEASEABLE_ASSETS + [
        ":sbom",
        "//av:tap_test_output",
        "//base:SystemProductTestOutput",
        "//edr:componenttests",
        "//eventjournaler:manualTools",
    ] + select({
        "//tools/config:linux_x64_rel": RELEASE_MODE_DEPS + [
            "//base:distribution_scripts",
            "//base:pluginapimessage_pb2_py",
            "//edr:schema",
        ],
        "//tools/config:linux_arm64_rel": RELEASE_MODE_DEPS,
        "//tools/config:linux_x64_dbg": [],
        "//tools/config:linux_arm64_dbg": [],
    }),
)

soph_export_assets(
    name = "export_fuzz_assets",
    output_folder = ".output",
    release_package = "//build:release-package.xml",
    tags = ["manual"],
    deps = select({
        "//tools/config:linux_x64_clang": FUZZ_DEPS,
        #        Todo, will this generate a empty artifact
        "//conditions:default": [],
    }),
)
