pipeline {
    agent none
    environment {
            LD_LIBRARY_PATH='/redist/binaries/linux10/input/openssl/lib64:/redist/binaries/linux10/input/SUL/lib64:/redist/binaries/linux10/input/boost/lib64:/usr/local/lib64:$LD_LIBRARY_PATH'
     }
    stages {
        stage('Builds') {
            parallel {
                stage('Build on Ubuntu') {
                    agent {
                        node {
                            label 'ubuntu1804'
                            customWorkspace "EverestBase/${BRANCH_NAME}"
                        }
                    }
                    steps {
                        withEnv(['PATH+CMAKE=/usr/local/bin:/redist/binaries/everest/cmake/bin']){
                            checkout scm
                            sh 'rm -rf /tmp/temp*'
                            sh 'rm -rf build && mkdir -p build && cd build && cmake .. && make'
                            sh 'cd build && ctest -V -T test --no-compress-output || echo ""'
                            sh 'cd build && cp Testing/`head -n 1 Testing/TAG`/Test.xml ./CTestResults.xml'
                        }
                    }
                    post {
                        always {
                            step(xunit(
                                thresholds: [ skipped(failureThreshold: '0'), failed(failureThreshold: '0') ],
                                tools: [ CTest(pattern: 'build/CTestResults.xml') ])
                                )
                        }
                    }
                }
                stage('Build on CentOS') {
                    agent {
                        node {
                            label 'centos7'
                            customWorkspace "EverestBase/${BRANCH_NAME}"
                        }
                    }
                    steps {
                        withEnv(['PATH+CMAKE=/usr/local/bin:/redist/binaries/everest/cmake/bin']){
                            checkout scm
                            sh 'rm -rf /tmp/temp*'
                            sh 'rm -rf build && mkdir -p build && cd build && cmake .. && make'
                            sh 'cd build && ctest -V -T test --no-compress-output || echo ""'
                            sh 'cd build && cp Testing/`head -n 1 Testing/TAG`/Test.xml ./CTestResults.xml'
                        }
                    }
                    post {
                        always {
                            step(xunit(
                                thresholds: [ skipped(failureThreshold: '0'), failed(failureThreshold: '0') ],
                                tools: [ CTest(pattern: 'build/CTestResults.xml') ])
                                )
                        }
                    }
                }
                stage('Build on Redhat') {
                    agent {
                        node {
                            label 'rhel7'
                            customWorkspace "EverestBase/${BRANCH_NAME}"
                        }
                    }
                    steps {
                        withEnv(['PATH+CMAKE=/usr/local/bin:/redist/binaries/everest/cmake/bin']){
                            checkout scm
                            sh 'rm -rf /tmp/temp*'
                            sh 'rm -rf build && mkdir -p build && cd build && cmake .. && make'
                            sh 'cd build && ctest -V -T test --no-compress-output || echo ""'
                            sh 'cd build && cp Testing/`head -n 1 Testing/TAG`/Test.xml ./CTestResults.xml'
                        }
                    }
                    post {
                        always {
                            step(xunit(
                                thresholds: [ skipped(failureThreshold: '0'), failed(failureThreshold: '0') ],
                                tools: [ CTest(pattern: 'build/CTestResults.xml') ])
                                )
                        }
                    }
                }
            }
        }
    }
}
