<?xml version="1.0" encoding="utf-8"?>
<package name="system-product-tests">
    <inputs>
        <workingdir>/tmp/system-product-test-inputs</workingdir>
        <build-asset project="linuxep" repo="everest-base">
            <development-version branch="develop"/>
            <include artifact-path="sspl-base/SDDS-COMPONENT" dest-dir="sspl-base"/>
            <include artifact-path="sspl-base/system_test" dest-dir="SystemProductTestOutput"/>
        </build-asset>
        <build-asset project="linuxep" repo="sspl-plugin-edr-component">
            <development-version branch="develop"/>
            <include artifact-path="edr/SDDS-COMPONENT" dest-dir="sspl-edr-plugin"/>
        </build-asset>
        <build-asset project="linuxep" repo="sspl-plugin-event-journaler">
            <development-version branch="develop"/>
            <include artifact-path="eventjournaler/SDDS-COMPONENT" dest-dir="sspl-plugin-event-journaler"/>
        </build-asset>
        <build-asset project="linuxep" repo="sspl-plugin-mdr-component">
            <development-version branch="develop"/>
            <include artifact-path="mdr-coverage/SDDS-COMPONENT" dest-dir="sspl-mdr-control-plugin"/>
            <include artifact-path="mdr-coverage/covfile" dest-dir="coverage"/>
        </build-asset>
        <build-asset project="linuxep" repo="sspl-plugin-mdr-componentsuite">
            <development-version branch="develop"/>
            <include artifact-path="output/SDDS-SSPL-DBOS-COMPONENT" dest-dir="sspl-mdr-componentsuite/SDDS-SSPL-DBOS-COMPONENT"/>
            <include artifact-path="output/SDDS-SSPL-MDR-COMPONENT" dest-dir="sspl-mdr-componentsuite/SDDS-SSPL-MDR-COMPONENT"/>
            <include artifact-path="output/SDDS-SSPL-MDR-COMPONENT-SUITE" dest-dir="sspl-mdr-componentsuite/SDDS-SSPL-MDR-COMPONENT-SUITE"/>
            <include artifact-path="output/SDDS-SSPL-OSQUERY-COMPONENT" dest-dir="sspl-mdr-componentsuite/SDDS-SSPL-OSQUERY-COMPONENT"/>
        </build-asset>
        <build-asset project="linuxep" repo="sspl-plugin-edr-componentsuite">
            <development-version branch="develop"/>
            <include artifact-path="sspl-componentsuite/SDDS-SSPL-COMPONENT-SUITE" dest-dir="sspl-componentsuite"/>
        </build-asset>
        <build-asset project="winep" repo="liveterminal">
            <development-version branch="develop" />
            <include artifact-path="liveterminal/sdds" dest-dir="liveterminal" />
            <include artifact-path="websocket_server" dest-dir="websocket_server" />
        </build-asset>
        <build-asset project="linuxep" repo="thininstaller">
            <development-version branch="develop" />
            <include artifact-path="output" dest-dir="sspl-thininstaller" />
        </build-asset>
        <package name="openssllinux11" version="1-1-1c-16/216598/output" dest=".">
            <include src="openssl.tar" dest="openssllinux11"/>
        </package>
        <package name="savlinux9-package" version="10-5-0/217084/savlinux-package" dest=".">
            <include src="sav-linux-x86-aggregated-10.5.0.0.25.tgz" dest="savlinux9-package"/>
        </package>


        <!--
                    local warehouses
                    when overriding a warehouse, do not change the customer dest-dir. only change the development-version and the
                    warehouse dest-dir to contain the override branch name with /s replaced by -s
                    The customer dest-dir matches up against constants set in WarehouseUtils.lib
        -->
        <build-asset project="linuxep" repo="sspl-warehouse">
            <development-version branch="develop" />
            <include artifact-path="develop/customer" dest-dir="local_warehouses/dev/sspl-warehouse/vut/warehouse/customer" />
            <include artifact-path="develop/warehouse" dest-dir="local_warehouses/dev/sspl-warehouse/develop/warehouse/warehouse" />
            <include artifact-path="edr-999/customer" dest-dir="local_warehouses/dev/sspl-warehouse/edr-999/warehouse/customer" />
            <include artifact-path="edr-999/warehouse" dest-dir="local_warehouses/dev/sspl-warehouse/edr-999/warehouse/warehouse" />
            <include artifact-path="base-999/customer" dest-dir="local_warehouses/dev/sspl-warehouse/base-999/warehouse/customer" />
            <include artifact-path="base-999/warehouse" dest-dir="local_warehouses/dev/sspl-warehouse/base-999/warehouse/warehouse" />
            <include artifact-path="query-pack/customer" dest-dir="local_warehouses/dev/sspl-warehouse/query-pack/warehouse/customer" />
            <include artifact-path="query-pack/warehouse" dest-dir="local_warehouses/dev/sspl-warehouse/query-pack/warehouse/warehouse" />
            <include artifact-path="edr-mdr-999/customer" dest-dir="local_warehouses/dev/sspl-warehouse/edr-mdr-999/warehouse/customer" />
            <include artifact-path="edr-mdr-999/warehouse" dest-dir="local_warehouses/dev/sspl-warehouse/edr-mdr-999/warehouse/warehouse" />
            <include artifact-path="mdr-999/customer" dest-dir="local_warehouses/dev/sspl-warehouse/mdr-999/warehouse/customer" />
            <include artifact-path="mdr-999/warehouse" dest-dir="local_warehouses/dev/sspl-warehouse/mdr-999/warehouse/warehouse" />
            <include artifact-path="0-6-0/customer" dest-dir="local_warehouses/dev/sspl-warehouse/0-6-0/warehouse/customer" />
            <include artifact-path="0-6-0/warehouse" dest-dir="local_warehouses/dev/sspl-warehouse/0-6-0/warehouse/warehouse" />
        </build-asset>
        <build-asset project="linuxep" repo="sspl-warehouse">
            <development-version branch="feature/Base-EDR-Only-OldWarehouseStyle" />
            <include artifact-path="customer" dest-dir="local_warehouses/dev/sspl-warehouse/old-style/warehouse/customer" />
            <include artifact-path="warehouse" dest-dir="local_warehouses/dev/sspl-warehouse/feature-Base-EDR-Only-OldWarehouseStyle/warehouse/warehouse" />
        </build-asset>
        <build-asset project="linuxep" repo="sspl-warehouse">
            <development-version branch="feature/latest-recommended-release" />
            <include artifact-path="customer" dest-dir="local_warehouses/dev/sspl-warehouse/latest-recommended/warehouse/customer" />
            <include artifact-path="warehouse" dest-dir="local_warehouses/dev/sspl-warehouse/feature-latest-recommended-release/warehouse/warehouse" />
        </build-asset>
        <build-asset project="linuxep" repo="sspl-warehouse">
            <development-version branch="feature/only-beta" />
            <include artifact-path="customer" dest-dir="local_warehouses/dev/sspl-warehouse/only-beta/warehouse/customer" />
            <include artifact-path="warehouse" dest-dir="local_warehouses/dev/sspl-warehouse/feature-only-beta/warehouse/warehouse" />
        </build-asset>
        <build-asset project="linuxep" repo="sspl-warehouse">
            <development-version branch="feature-paused-updating" />
            <include artifact-path="customer" dest-dir="local_warehouses/dev/sspl-warehouse/paused-updating/warehouse/customer" />
            <include artifact-path="warehouse" dest-dir="local_warehouses/dev/sspl-warehouse/feature-paused-updating/warehouse/warehouse" />
        </build-asset>
    </inputs>

    <publish>
        <workingdir>sspl-base-build</workingdir>
        <destdir>sspl-base</destdir>
        <buildoutputs>
            <output name="output" srcfolder="output" artifactpath="output"> </output>
            <output name="openssl" srcfolder="redist/openssl" artifactpath="openssl"> </output>
            <output name="build_log" srcfolder="log"> </output>
        </buildoutputs>
        <publishbranches>master,feature,release,develop,bugfix</publishbranches>
    </publish>
</package>
