<?xml version='1.0' encoding='utf-8'?>
<package name="system-product-tests">
    <inputs>
        <workingdir>/tmp/system-product-test-inputs</workingdir>
        <build-asset project="linuxep" repo="everest-base">
            <development-version branch="develop"/>
            <include mode="system-test,ej-coverage,mdr-coverage,edr-coverage,lr-coverage" artifact-path="sspl-base/SDDS-COMPONENT" dest-dir="sspl-base"/>
            <include mode="system-test,ej-coverage,mdr-coverage,edr-coverage,lr-coverage" artifact-path="sspl-base/RA-SDDS-COMPONENT" dest-dir="sspl-responseactions-plugin"/>
            <include mode="system-test,ej-coverage,mdr-coverage,edr-coverage,lr-coverage" artifact-path="sspl-base/SDDS3-PACKAGE" dest-dir="sspl-base-sdds3"/>
            <include mode="system-test,ej-coverage,mdr-coverage,edr-coverage,lr-coverage" artifact-path="sspl-base/system_test" dest-dir="SystemProductTestOutput"/>
            <include mode="system-test,ej-coverage,mdr-coverage,edr-coverage,lr-coverage,base-coverage" artifact-path="sspl-base-060/SDDS-COMPONENT" dest-dir="sspl-base-0-6-0"/>
            <include mode="base-coverage" artifact-path="sspl-base-coverage/SDDS-COMPONENT" dest-dir="sspl-base"/>
            <include mode="base-coverage" artifact-path="sspl-base/RA-SDDS-COMPONENT" dest-dir="sspl-responseactions-plugin"/>
            <include mode="base-coverage" artifact-path="sspl-base-coverage/SDDS3-PACKAGE" dest-dir="sspl-base-sdds3"/>
            <include mode="base-coverage" artifact-path="sspl-base-coverage/system_test" dest-dir="SystemProductTestOutput"/>
            <include mode="base-coverage" artifact-path="sspl-base-coverage/covfile" dest-dir="coverage"/>
        </build-asset>
        <build-asset project="linuxep" repo="sspl-plugin-edr-component">
            <development-version branch="develop"/>
            <include mode="system-test,base-coverage,ej-coverage,mdr-coverage,lr-coverage" artifact-path="edr/SDDS-COMPONENT" dest-dir="sspl-edr-plugin"/>
            <include mode="edr-coverage" artifact-path="sspl-edr-coverage/SDDS-COMPONENT" dest-dir="sspl-edr-plugin"/>
            <include mode="edr-coverage" artifact-path="sspl-edr-coverage/covfile" dest-dir="coverage"/>
        </build-asset>
        <build-asset project="linuxep" repo="runtimedetections">
            <development-version branch="develop"/>
            <include mode="system-test,base-coverage,ej-coverage,mdr-coverage,lr-coverage" artifact-path="SDDS-COMPONENT" dest-dir="sspl-runtimedetections-plugin"/>
            <include mode="system-test,base-coverage,ej-coverage,mdr-coverage,lr-coverage" artifact-path="sspl-rdrules" dest-dir="sspl-runtimedetections-plugin/content_rules"/>
        </build-asset>
        <build-asset project="linuxep" repo="sspl-plugin-event-journaler">
            <development-version branch="develop"/>
            <include mode="system-test,base-coverage,mdr-coverage,edr-coverage,lr-coverage" artifact-path="eventjournaler/SDDS-COMPONENT" dest-dir="sspl-plugin-event-journaler"/>
            <include mode="system-test,base-coverage,mdr-coverage,edr-coverage,lr-coverage" artifact-path="eventjournaler/manualTools" dest-dir="sspl-plugin-event-journaler-manual-tools"/>
            <include mode="ej-coverage" artifact-path="sspl-plugin-eventjournaler-coverage/manualTools" dest-dir="sspl-plugin-event-journaler-manual-tools"/>
            <include mode="ej-coverage" artifact-path="sspl-plugin-eventjournaler-coverage//SDDS-COMPONENT" dest-dir="sspl-plugin-event-journaler"/>
            <include mode="ej-coverage" artifact-path="sspl-plugin-eventjournaler-coverage/covfile" dest-dir="coverage"/>
        </build-asset>
        <build-asset project="linuxep" repo="sspl-plugin-anti-virus">
            <development-version branch="develop"/>
            <include mode="system-test,base-coverage,ej-coverage,mdr-coverage,edr-coverage,lr-coverage" artifact-path="sspl-plugin-anti-virus/SDDS-COMPONENT" dest-dir="sspl-plugin-anti-virus"/>
        </build-asset>
        <build-asset project="core" repo="safestore">
            <development-version branch="develop" />
            <include mode="system-test,base-coverage,ej-coverage,mdr-coverage,edr-coverage,lr-coverage" artifact-path="release/linux-x64/safestore" dest-dir="safestore_tools"/>
        </build-asset>


        <build-asset project="linuxep" repo="sspl-plugin-edr-componentsuite">
            <development-version branch="develop"/>
            <include mode="system-test,base-coverage,ej-coverage,mdr-coverage,edr-coverage,lr-coverage" artifact-path="sspl-componentsuite/SDDS-SSPL-COMPONENT-SUITE" dest-dir="sspl-componentsuite"/>
        </build-asset>
        <build-asset project="winep" repo="liveterminal">
            <development-version branch="develop" />
            <include mode="system-test,base-coverage,ej-coverage,mdr-coverage,edr-coverage" artifact-path="liveterminal/sdds" dest-dir="liveterminal" />
            <include mode="system-test,base-coverage,ej-coverage,mdr-coverage,edr-coverage,lr-coverage" artifact-path="websocket_server" dest-dir="websocket_server" />
            <include mode="lr-coverage" artifact-path="sspl-liveterminal-coverage/sdds" dest-dir="liveterminal" />
            <include mode="lr-coverage" artifact-path="linux/bullseye" dest-dir="coverage" />
        </build-asset>
        <build-asset project="linuxep" repo="thininstaller">
            <development-version branch="develop" />
            <include mode="system-test,base-coverage,ej-coverage,mdr-coverage,edr-coverage,lr-coverage" artifact-path="output" dest-dir="sspl-thininstaller" />
        </build-asset>
        <build-asset project="linuxep" repo="thininstaller">
            <development-version branch="release/Version-1_1_4" />
            <include mode="system-test,base-coverage,ej-coverage,mdr-coverage,edr-coverage,lr-coverage" artifact-path="output" dest-dir="sspl-legacy-thininstaller" />
        </build-asset>

        <!--        pull the scripts from mono-repo to get the coverage uploaded to redash-->
        <build-asset project="em" repo="esg">
            <!-- release-version fetches for all branches with no development-version -->
            <development-version branch="release--bazeltools"/>
            <include mode="base-coverage,ej-coverage,mdr-coverage,edr-coverage,lr-coverage" artifact-path="bazel-tools" dest-dir="bazel-tools"/>
        </build-asset>

        <build-asset project="em" repo="esg">
            <development-version branch="develop"/>
            <include artifact-path="sophlib/linux_x64_rel/sdds3_tools" dest-dir="sdds3"/>
        </build-asset>


        <!--
                    local warehouses
                    when overriding a warehouse, do not change the customer dest-dir. only change the development-version and the
                    warehouse dest-dir to contain the override branch name with /s replaced by -s
                    The customer dest-dir matches up against constants set in WarehouseUtils.lib
        -->
        <build-asset project="linuxep" repo="sspl-warehouse">
            <development-version branch="develop" />
            <include artifact-path="sdds3-repo-999" dest-dir="sdds3/repo" />
            <include artifact-path="sdds3-repo" dest-dir="sdds3/repo" />
            <include artifact-path="sdds3-launchdarkly" dest-dir="sdds3/launchdarkly" />
            <include artifact-path="sdds3-launchdarkly-999" dest-dir="sdds3/launchdarkly-999" />
            <include artifact-path="prod-sdds3-static-suites" dest-dir="sdds3/launchdarkly-static" />
            <include artifact-path="prod-sdds3-static-suites-999" dest-dir="sdds3/launchdarkly-static-999" />
        </build-asset>
    </inputs>

    <publish>
        <workingdir>sspl-base-build</workingdir>
        <destdir>sspl-base</destdir>
        <buildoutputs>
            <output name="output" srcfolder="output" artifactpath="output"> </output>
            <output name="openssl" srcfolder="redist/openssl" artifactpath="openssl"> </output>
            <output name="build_log" srcfolder="log"> </output>
        </buildoutputs>
        <publishbranches>master,feature,release,develop,bugfix</publishbranches>
    </publish>
</package>