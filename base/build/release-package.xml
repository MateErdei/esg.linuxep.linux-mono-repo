<?xml version="1.0" encoding="utf-8"?>
<package name="sspl-base" version="1.1.8">
    <versioning>
        <workingdir>./products/distribution/include/AutoVersioningHeaders</workingdir>
    </versioning>
    <inputs>
        <workingdir>.</workingdir>
        <package name="gcclinux" version="8-1-0-43/213047/gcclinux" dest="/build/input">
            <include src="gcc-8.1.0-linux.tar.gz" dest="."/>
        </package>
        <package name="openssllinux11" version="1-1-1l-1/222963/output" dest="/build/input">
            <include src="openssl.tar" dest="."/>
        </package>
        <package name="cmakelinux"
                 version="3-11-2-4/213056/cmakelinux" dest="/build/input">
            <include src="cmake-3.11.2-linux.tar.gz" dest="."/>
        </package>
        <package name="versig" version="2-0-0-92/222980/output" dest="/build/input">
            <include src="versig.tar" dest="."/>
        </package>
        <package name="curllinux11" version="7-78-0-3/222970/output" dest="/build/input">
            <include src="curl.tar" dest="."/>
        </package>
        <package name="sullinux11" version="1-0-0-76/222976/output" dest="/build/input">
            <include src="SUL.tar" dest="."/>
        </package>
        <package name="boostlinux11" version="1-77-0-1/222969/output" dest="/build/input">
            <include src="boost.tar" dest="."/>
        </package>
        <package name="expatlinux11" version="2-4-1-1/222964/output" dest="/build/input">
            <include src="expat.tar" dest="."/>
        </package>
        <package name="protobuflinux11" version="3-17-3-1/222971/output" dest="/build/input">
            <include src="protobuf.tar" dest="."/>
        </package>
        <package name="zeromqlinux11" version="4-3-4-9/222030/output" dest="/build/input">
            <include src="zeromq.tar" dest="."/>
        </package>
        <package name="log4cpluslinux11" version="2-0-5-19/220731/output" dest="/build/input">
            <include src="log4cplus.tar" dest="."/>
        </package>
        <package name="zliblinux11" version="1-2-11-4/219630/output" dest="/build/input">
            <include src="zlib.tar" dest="."/>
        </package>
        <package name="pscerts" version="1-0-1/67228/ps_certificates" dest="/build/input">
            <include src="ps_rootca.crt" dest="."/>
        </package>
        <package name="pythonlinux11" version="3-9-7-1/222972/output" dest="/build/input">
            <include src="python.tar" dest="." />
        </package>
        <package name="python-watchdog" version="2-0-2-3/222028/watchdog" dest="/build/input">
            <include src="python-watchdog.tar" dest="." />
        </package>
        <package name="python-pathtools" version="0-1-1-9/216281/pathtools" dest="/build/input">
            <include src="python-pathtools.tar" dest="." />
        </package>
        <package name="pycryptodomelinux11" version="3-9-8-3/221638/pycryptodome" dest="/build/input">
            <include src="pycryptodome.tar" dest="." />
        </package>
        <package name="googletest" version="1-8-1/EES-8928" dest="/build/input">
            <include src="googletest-release-1.8.1.tar.gz" dest="."/>
        </package>
        <package name="python-certifi" version="2020-12-5-1/222027/certifi" dest="/build/input">
            <include src="python-certifi.tar" dest="."/>
        </package>
        <package name="python-urllib3" version="1-25-8-13/218622/urllib3" dest="/build/input">
            <include src="python-urllib3.tar" dest="."/>
        </package>
        <package name="python-six" version="1-14-0-14/218620/six" dest="/build/input">
            <include src="python-six.tar" dest="."/>
        </package>
        <package name="python-requests" version="2-22-0-10/218619/requests" dest="/build/input">
            <include src="python-requests.tar" dest="."/>
        </package>
        <package name="python-idna" version="3-1-0-3/222032/idna" dest="/build/input">
            <include src="python-idna.tar" dest="."/>
        </package>
        <package name="python-chardet" version="3-0-4-3/218617/chardet" dest="/build/input">
            <include src="python-chardet.tar" dest="."/>
        </package>
        <package name="python-sseclient" version="0-0-23-19/218716/sseclient" dest="/build/input">
            <include src="python-sseclient.tar" dest="."/>
        </package>
        <build-asset project="thirdparty" repo="minizip">
            <release-version branch="release/linux-3.0.2" build-id="20210622151109-45729c01a79b678f7a29cf76cf770128ef856e2e-7mmYMo"/>
            <development-version branch="sophos/linux-sspl-master"/>
            <include artifact-path="output" dest-dir="/build/input"/>
        </build-asset>
    </inputs>
    <buildcommands>
        <!-- LINUXDAR-851 un-comment code below to allow debug build option when agreed -->
        <!--<command  buildtype="prod"> -->
        <command mode="release,oldci">
            <program>/bin/bash</program>
            <args>./build.sh --clean --parallel-test 1</args>
            <workingdir>.</workingdir>
        </command>

        <command mode="coverage">
            <program>/bin/bash</program>
            <args>./build.sh --clean --bullseye</args>
            <workingdir>.</workingdir>
        </command>

        <command mode="analysis">
            <program>/bin/bash</program>
            <args>./build.sh --no-build --analysis</args>
            <workingdir>.</workingdir>
        </command>

        <command mode="999">
            <program>/bin/bash</program>
            <args>./build.sh --clean --999 --no-unittest</args>
            <workingdir>.</workingdir>
        </command>

        <command mode="060">
            <program>/bin/bash</program>
            <args>./build.sh --clean --060 --no-unittest</args>
            <workingdir>.</workingdir>
        </command>

        <!--<command buildtype="dev">
            <program>/bin/bash</program>
            <args>./build.sh - -clean - -debug</args> 'when put back remove space between hyphens'
            <workingdir>sspl-base-build</workingdir>
        </command> -->
    </buildcommands>
    <publish>
        <workingdir>.</workingdir>
        <!-- Release -->
        <release-asset artifact-path="sspl-base/SDDS-COMPONENT" source-dir="output/SDDS-COMPONENT" mode="release"/>

        <build-asset artifact-path="sspl-base/openssl" source-dir="redist/openssl" mode="release"/>
        <build-asset artifact-path="sspl-base/pluginapi" source-dir="output" mode="release">
            <include glob="pluginapi.tar.gz"/>
        </build-asset>
        <build-asset artifact-path="sspl-base/system_test" source-dir="output" mode="release">
            <include glob="SystemProductTestOutput.tar.gz"/>
            <include glob="symbols"/>
        </build-asset>
        <build-asset artifact-path="sspl-base/fake-management" source-dir="testUtils/SupportFiles/FakeManagement" mode="release"/>

        <!-- coverage(bullseye) -->
        <build-asset artifact-path="sspl-base-coverage/SDDS-COMPONENT" source-dir="output/SDDS-COMPONENT" mode="coverage"/>
        <build-asset artifact-path="sspl-base-coverage/openssl" source-dir="redist/openssl" mode="coverage"/>
        <build-asset artifact-path="sspl-base-coverage/pluginapi" source-dir="output" mode="coverage">
            <include glob="pluginapi.tar.gz"/>
        </build-asset>
        <build-asset artifact-path="sspl-base-coverage/system_test" source-dir="output" mode="coverage">
            <include glob="SystemProductTestOutput.tar.gz"/>
            <include glob="symbols"/>
        </build-asset>
        <build-asset artifact-path="sspl-base-coverage/build_log" source-dir="log" mode="coverage"/>

        <build-asset artifact-path="sspl-base-coverage/unittest-htmlreport" source-dir="output/coverage/sspl-base-unittest" mode="coverage"/>
        <build-asset artifact-path="sspl-base-coverage/covfile" source-dir="output/" mode="coverage">
            <include glob="./*.cov"/>
        </build-asset>

        <!-- Analysis -->
        <build-asset artifact-path="sspl-base/analysis" source-dir="output/analysis" mode="analysis"/>
        <build-asset artifact-path="sspl-base/analysis_build_log" source-dir="log" mode="analysis"/>


        <!-- 999 -->
        <release-asset artifact-path="sspl-base-999/SDDS-COMPONENT" source-dir="output/SDDS-COMPONENT" mode="999"/>
        <!-- 060 -->
        <release-asset artifact-path="sspl-base-060/SDDS-COMPONENT" source-dir="output/SDDS-COMPONENT" mode="060"/>

        <!-- Legacy -->
        <workingdir>.</workingdir>
        <destdir>sspl-base</destdir>
        <buildoutputs>
            <!-- Release  oldci-->
            <output name="output" srcfolder="output" artifactpath="output" mode="oldci"/>
            <output name="openssl" srcfolder="redist/openssl" artifactpath="openssl" mode="oldci"/>
            <output name="build_log" srcfolder="log" mode="oldci"/>
        </buildoutputs>
        <publishbranches>master,feature,release,develop,bugfix</publishbranches>
    </publish>
</package>
