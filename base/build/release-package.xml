<?xml version='1.0' encoding='utf-8'?>
<package name="sspl-base" version="1.2.2">
    <versioning>
        <workingdir>./products/distribution/include/AutoVersioningHeaders</workingdir>
    </versioning>
    <inputs>
        <workingdir>.</workingdir>
        <build-asset project="linuxep" repo="sul">
            <release-version branch="release/Version_1_0_1" build-id="20220822170900-3cc5f9a78dbbac072646d2b5379de43790212405-AR95mL"/>
            <development-version branch="develop"/>
            <include artifact-path="output" dest-dir="/build/input"/>
        </build-asset>
        <build-asset project="linuxep" repo="versig">
            <release-version branch="release/Version_2_0_0" build-id="20220727094738-a99112d63f8fc2b87e53e7e69e687cf4fd890434-OYVMQC"/>
            <development-version branch="master"/>
            <include artifact-path="output" dest-dir="/build/input/"/>
        </build-asset>

        <build-asset project="thirdparty" repo="boost">
            <release-version branch="release/sspl/Version_1_78_0" build-id="20220310141901-bdae372a9027e1760f105dc819023a49ef444765-xdQFp9"/>
            <include artifact-path="output" dest-dir="/build/input"/>
        </build-asset>
        <build-asset project="thirdparty" repo="curl">
            <release-version branch="release/sspl/Version_7_84_0" build-id="20220822152212-f128f504bb954bd08e1b0f48fada7c5a73dc94f8-SnVSla"/>
            <include artifact-path="output" dest-dir="/build/input"/>
        </build-asset>
        <build-asset project="thirdparty" repo="cpython">
            <release-version branch="release/sspl/Version_3_9_7" build-id="20220727094603-7ff6716a0182eada35ce401609e361e2365c1c12-BpbOIx"/>
            <include artifact-path="output" dest-dir="/build/input"/>
        </build-asset>
        <build-asset project="thirdparty" repo="gcc">
            <release-version branch="release/Version_11_2_0" build-id="20220310091547-cf8f7ca9572a3bc9a68f05138086815341a49224-cZ84iF"/>
            <include artifact-path="output" dest-dir="/build/input"/>
        </build-asset>
        <build-asset project="thirdparty" repo="gsl">
            <release-version branch="release/sophos" build-id="20200911164143-1923fa9a9b1636f552266b4c9082714d04d869e6-tbYSwR"/>
            <include artifact-path="include" dest-dir="/build/redist/gsl/include"/>
        </build-asset>
        <build-asset project="thirdparty" repo="libexpat">
            <release-version branch="release/sspl/Version_2_4_8" build-id="20220412084210-700180882b0055f197dcf0198d71f0be516561bc-ihDKUE"/>
            <include artifact-path="output" dest-dir="/build/input"/>
        </build-asset>
        <build-asset project="thirdparty" repo="libzmq">
            <release-version branch="release/sspl/Version_4_3_4" build-id="20220310142454-6680251ccb165f18f672e5bfad0df9041fb1e431-JsvEqi"/>
            <include artifact-path="output" dest-dir="/build/input"/>
        </build-asset>
        <build-asset project="thirdparty" repo="log4cplus">
            <release-version branch="release/sspl/Version_2_0_7" build-id="20220310142847-3a4bb813dfdcbf28d538394d253449fbb7c78bad-rAcfZX"/>
            <include artifact-path="output" dest-dir="/build/input"/>
        </build-asset>
        <build-asset project="thirdparty" repo="minizip">
            <release-version branch="release/linux-3.0.2" build-id="20220727094518-4b69c4f15c0e809f6fa147e9347b3cfec2ee6beb-ckevhm"/>
            <development-version branch="sophos/linux-sspl-master"/>
            <include artifact-path="output" dest-dir="/build/input"/>
        </build-asset>
        <build-asset project="thirdparty" repo="openssl">
            <release-version branch="release/sspl/Version_1_1_1q" build-id="20220725102623-b49f6c504d454be8e7bc6a7dc7f7528b53920bdc-iF7TY0"/>
            <include artifact-path="output" dest-dir="/build/input"/>
        </build-asset>
        <build-asset project="thirdparty" repo="protobuf">
            <release-version branch="release/sspl/Version_3_17_3" build-id="20220310143632-66a638734ca9de06319cfc97fdd27ac200fdec15-yMZBAU"/>
            <include artifact-path="output" dest-dir="/build/input"/>
        </build-asset>
        <build-asset project="thirdparty" repo="pycryptodome">
            <release-version branch="release/Version_3_9_8" build-id="20220310111719-b1f9b17dd884a897e221c5ecd87cb515efadfb5f-UukkwD"/>
            <include artifact-path="pycryptodome" dest-dir="/build/input"/>
        </build-asset>
        <build-asset project="thirdparty" repo="python-certifi">
            <release-version branch="release/Version_2020_12_5" build-id="20220310111821-c30b09255d22f716b5034e888a7f13d13a904fcc-BF2ez4"/>
            <include artifact-path="certifi" dest-dir="/build/input"/>
        </build-asset>
        <build-asset project="thirdparty" repo="python-chardet">
            <release-version branch="release/Version_3_0_4" build-id="20220310111909-5908be3d4e5f7667dc59ef3d5e8868b18def4a3c-0rWlwQ"/>
            <include artifact-path="chardet" dest-dir="/build/input"/>
        </build-asset>
        <build-asset project="thirdparty" repo="python-idna">
            <release-version branch="release/Version_3_1_0" build-id="20220310111949-96d731bc5a96490d0a5654fadaf7a7ca1b510314-WutaRR"/>
            <include artifact-path="idna" dest-dir="/build/input"/>
        </build-asset>
        <build-asset project="thirdparty" repo="python-pathtools">
            <release-version branch="release/Version_0_1_1" build-id="20220310112041-d6506d5a54d7ab64109248a0014834583d1277ae-Bogokc"/>
            <include artifact-path="pathtools" dest-dir="/build/input"/>
        </build-asset>
        <build-asset project="thirdparty" repo="python-requests">
            <release-version branch="release/Version_2_22_0" build-id="20220310112124-29baed4970a3bcb078732c61dfab3ab26974a938-iAqj9C"/>
            <include artifact-path="requests" dest-dir="/build/input"/>
        </build-asset>
        <build-asset project="thirdparty" repo="python-six">
            <release-version branch="release/Version_1_14_0" build-id="20220324133918-e2d7f2ac3ba7a14df4ca67e03c3b80a9285985ca-nQUDUk"/>
            <include artifact-path="six" dest-dir="/build/input"/>
        </build-asset>
        <build-asset project="thirdparty" repo="python-sseclient">
            <release-version branch="release/Version_0_0_23" build-id="20220310112258-ce1aad0abf4fff20e419fb9cd231912bd07cedba-j05GgO"/>
            <include artifact-path="sseclient" dest-dir="/build/input"/>
        </build-asset>
        <build-asset project="thirdparty" repo="python-urllib3">
            <release-version branch="release/Version_1_25_8" build-id="20220310112334-44f8cd596d6fa095c0a5cb0b10ce68eb94061d17-A0J6oW"/>
            <include artifact-path="urllib3" dest-dir="/build/input"/>
        </build-asset>
        <build-asset project="thirdparty" repo="python-watchdog">
            <release-version branch="release/Version_2_0_2" build-id="20220310112409-132ecf9b8ced1f937cbb2a7ad73d171a167fe2bf-A6aX2E"/>
            <include artifact-path="watchdog" dest-dir="/build/input"/>
        </build-asset>
        <trusted-asset artifact-path="filer5-migrate/pscerts/1-0-1/67228/ps_certificates/ps_rootca.crt" dest-dir="/build/input/"/>

        <build-asset project="em" repo="esg">
            <release-version branch="release/2023.04/sprint" build-id="20230120201925-31a0379094fc1654506d3d459661d326949dee47-bh0Sgz"/>
            <development-version branch="develop"/>
            <include artifact-path="sophlib/include" dest-dir="/build/input/sophlib/include/sophlib"/>
            <include artifact-path="sophlib/linux_x86-64" dest-dir="/build/input/sophlib/lib64"/>

            <include artifact-path="thirdparty/zlib-linux-opt" dest-dir="/build/redist/zlib"/>
        </build-asset>

        <build-asset project="em" repo="esg">
            <!--            <release-version branch="thirdparty/googletest" build-id="20230202135916-551d638c1f6e6de78acdf690401160e9789365b0-LTBz3g"/>-->
            <development-version branch="feature/thirdparty/LINUXDAR-6721-update-googletest"/>
            <include artifact-path="thirdparty/googletest-linux-opt" dest-dir="/build/input/googletest"/>
        </build-asset>

        <build-asset project="winep" repo="sau">
            <release-version branch="release/sspl/Version_1_0_0" build-id="20220825150631-43a7c87ceb5905f316aef54df45de777a5961022-O0LZyf"/>
            <development-version branch="develop"/>
            <include artifact-path="Linux-x64/SDDS3-Lib" dest-dir="/build/input"/>
            <include artifact-path="Linux-x64/SDDS3-Utils" dest-dir="/build/input/sdds3"/>
        </build-asset>

        <trusted-asset artifact-path="org.cmake/cmake-3.26.0/cmake-3.26.0" dest-dir="/build/input/cmake"/>
    </inputs>
    <buildcommands>

        <!-- Common build steps -->
        <command>
            <program>/bin/bash</program>
            <args>./unpack_build_inputs.sh</args>
            <workingdir>.</workingdir>
        </command>

        <!-- Release build -->
        <command mode="release">
            <program>/bin/bash</program>
            <args>./build.sh --release</args>
            <workingdir>.</workingdir>
        </command>

        <!-- Debug build -->
        <command mode="debug">
            <program>/bin/bash</program>
            <args>./build.sh --debug</args>
            <workingdir>.</workingdir>
        </command>

        <!-- Coverage build -->
        <command mode="coverage">
            <program>/bin/bash</program>
            <args>./build.sh --clean --bullseye --release</args>
            <workingdir>.</workingdir>
        </command>

        <!-- Static analysis build -->
        <command mode="analysis">
            <program>/bin/bash</program>
            <args>./build.sh --no-build --analysis</args>
            <workingdir>.</workingdir>
        </command>

        <!-- 999 version Build-->
        <command mode="999">
            <program>/bin/bash</program>
            <args>./build.sh --clean --999 --no-unittest --release</args>
            <workingdir>.</workingdir>
        </command>

        <!-- 060 version Build-->
        <command mode="060">
            <program>/bin/bash</program>
            <args>./build.sh --clean --060 --no-unittest --release</args>
            <workingdir>.</workingdir>
        </command>
    </buildcommands>
    <publish>
        <workingdir>.</workingdir>

        <!-- Release -->
        <release-asset artifact-path="sspl-base/SDDS-COMPONENT" source-dir="output/SDDS-COMPONENT" mode="release"/>
        <release-asset artifact-path="sspl-base/RA-SDDS-COMPONENT" source-dir="output/RA-SDDS-COMPONENT" mode="release"/>
        <release-asset artifact-path="sspl-base/SDDS3-PACKAGE" source-dir="output/SDDS3-PACKAGE" mode="release"/>
        <release-asset artifact-path="sspl-base/RA-SDDS3-PACKAGE" source-dir="output/RA-SDDS3-PACKAGE" mode="release"/>
        <release-asset artifact-path="sspl-base/symbols" source-dir="output/symbols" mode="release"/>

        <build-asset artifact-path="sspl-base/openssl" source-dir="/build/redist/openssl" mode="release"/>
        <build-asset artifact-path="sspl-base/pluginapi" source-dir="output" mode="release">
            <include glob="pluginapi.tar.gz"/>
        </build-asset>
        <build-asset artifact-path="sspl-base/cmcsrouterapi" source-dir="output" mode="release">
            <include glob="cmcsrouterapi.tar.gz"/>
        </build-asset>
        <build-asset artifact-path="sspl-base/mcs" source-dir="output" mode="release">
            <include glob="mcs.tar.gz"/>
        </build-asset>
        <build-asset artifact-path="sspl-base/system_test" source-dir="output" mode="release">
            <include glob="SystemProductTestOutput.tar.gz"/>
        </build-asset>
        <build-asset artifact-path="sspl-base/fake-management" source-dir="testUtils/SupportFiles/FakeManagement" mode="release"/>

        <!-- coverage(bullseye) -->
        <build-asset artifact-path="sspl-base-coverage/SDDS-COMPONENT" source-dir="output/SDDS-COMPONENT" mode="coverage"/>
        <build-asset artifact-path="sspl-base-coverage/RA-SDDS-COMPONENT" source-dir="output/RA-SDDS-COMPONENT" mode="coverage"/>
        <build-asset artifact-path="sspl-base-coverage/SDDS3-PACKAGE" source-dir="output/SDDS3-PACKAGE" mode="coverage"/>
        <build-asset artifact-path="sspl-base-coverage/RA-SDDS3-PACKAGE" source-dir="output/RA-SDDS3-PACKAGE" mode="coverage"/>
        <build-asset artifact-path="sspl-base-coverage/openssl" source-dir="/build/redist/openssl" mode="coverage"/>
        <build-asset artifact-path="sspl-base-coverage/pluginapi" source-dir="output" mode="coverage">
            <include glob="pluginapi.tar.gz"/>
        </build-asset>
        <build-asset artifact-path="sspl-base-coverage/mcs" source-dir="output" mode="coverage">
            <include glob="mcs.tar.gz"/>
        </build-asset>
        <build-asset artifact-path="sspl-base-coverage/system_test" source-dir="output" mode="coverage">
            <include glob="SystemProductTestOutput.tar.gz"/>
            <include glob="symbols"/>
        </build-asset>
        <build-asset artifact-path="sspl-base-coverage/build_log" source-dir="log" mode="coverage"/>

        <build-asset artifact-path="sspl-base-coverage/unittest-htmlreport" source-dir="output/coverage/sspl-base-unittest" mode="coverage"/>
        <build-asset artifact-path="sspl-base-coverage/covfile" source-dir="output/" mode="coverage">
            <include glob="./*.cov"/>
        </build-asset>

        <!-- Analysis -->
        <build-asset artifact-path="sspl-base/analysis" source-dir="output/analysis" mode="analysis"/>
        <build-asset artifact-path="sspl-base/analysis_build_log" source-dir="log" mode="analysis"/>

        <!-- 999 -->
        <release-asset artifact-path="sspl-base-999/SDDS-COMPONENT" source-dir="output/SDDS-COMPONENT" mode="999"/>
        <release-asset artifact-path="sspl-base-999/SDDS3-PACKAGE" source-dir="output/SDDS3-PACKAGE" mode="999"/>
        <release-asset artifact-path="sspl-base-999/RA-SDDS-COMPONENT" source-dir="output/RA-SDDS-COMPONENT" mode="999"/>
        <release-asset artifact-path="sspl-base-999/RA-SDDS3-PACKAGE" source-dir="output/RA-SDDS3-PACKAGE" mode="999"/>
        <!-- 060 -->
        <release-asset artifact-path="sspl-base-060/SDDS-COMPONENT" source-dir="output/SDDS-COMPONENT" mode="060"/>
        <release-asset artifact-path="sspl-base-060/SDDS3-PACKAGE" source-dir="output/SDDS3-PACKAGE" mode="060"/>

        <!--TODO: LINUXDAR-6488 - get all build modes working with old artifact path-->
        <!-- debug -->
        <build-asset artifact-path="sspl-base-debug/SDDS-COMPONENT" source-dir="output/SDDS-COMPONENT" mode="debug"/>
        <build-asset artifact-path="sspl-base-debug/SDDS3-PACKAGE" source-dir="output/SDDS3-PACKAGE" mode="debug"/>

        <build-asset artifact-path="sspl-base-debug/openssl" source-dir="/build/redist/openssl" mode="debug"/>
        <build-asset artifact-path="sspl-base-debug/pluginapi" source-dir="output" mode="debug">
            <include glob="pluginapi.tar.gz"/>
        </build-asset>
        <build-asset artifact-path="sspl-base-debug/cmcsrouterapi" source-dir="output" mode="debug">
            <include glob="cmcsrouterapi.tar.gz"/>
        </build-asset>
        <build-asset artifact-path="sspl-base-debug/mcs" source-dir="output" mode="debug">
            <include glob="mcs.tar.gz"/>
        </build-asset>
        <build-asset artifact-path="sspl-base-debug/system_test" source-dir="output" mode="debug">
            <include glob="SystemProductTestOutput.tar.gz"/>
            <include glob="symbols"/>
        </build-asset>
        <build-asset artifact-path="sspl-base-debug/fake-management" source-dir="testUtils/SupportFiles/FakeManagement" mode="debug"/>

        <publishbranches>master,feature,release,develop,bugfix,debug</publishbranches>
    </publish>
</package>
