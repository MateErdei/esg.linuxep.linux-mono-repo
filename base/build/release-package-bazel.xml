<?xml version='1.0' encoding='utf-8'?>
<package name="sspl-base" version="1.2.4">
    <versioning>
        <workingdir>./products/distribution/include/AutoVersioningHeaders</workingdir>
    </versioning>
    <inputs>
        <workingdir>.</workingdir>
        <build-asset project="linuxep" repo="versig">
            <release-version branch="release/Version_3_0_0" build-id="20230322153623-e2a0e8a63ecc991fc33e349f9777efe2e7718942-0OdmtP"/>
            <include artifact-path="output" dest-dir="/build/input/"/>
        </build-asset>
        <build-asset project="thirdparty" repo="libxcrypt">
            <release-version branch="release/version_4_4_28" build-id="20220325112559-16cdaea644b21a42436fbffb79ab4aa5aa9a1b6e-tFdACT"/>
            <include artifact-path="libxcrypt" dest-dir="/build/input" />
        </build-asset>
        <trusted-asset artifact-path="filer5-migrate/pscerts/1-0-1/67228/ps_certificates/ps_rootca.crt" dest-dir="/build/input/"/>

        <build-asset project="em" repo="esg">
            <development-version branch="feature/bazeltools/LINUXDAR-6781_crosstool_toolchain"/>
            <include artifact-path="bazel-tools" dest-dir="." />
        </build-asset>

        <trusted-asset artifact-path="esg/python_dependencies/20230228/linux_spl" dest-dir="/build/input/pypi"/>
        <trusted-asset artifact-path="org.python/linux/3.11.1/cpython-3.11.1 20230116-x86_64-unknown-linux-gnu-install_only" dest-dir="/build/input"/>
    </inputs>
    <buildcommands>

        <!-- Common build steps -->
        <command>
            <program>/bin/bash</program>
            <args>./unpack_build_inputs.sh</args>
            <workingdir>.</workingdir>
        </command>

        <!-- Release build -->
        <command mode="bazel_release">
            <program>sed</program>
            <args>-i 's/\r$//' tools/aspects/wrapper.sh</args>
            <workingdir>.</workingdir>
        </command>
        <command mode="bazel_release">
            <program>chmod</program>
            <args>+x tools/aspects/wrapper.sh</args>
            <workingdir>.</workingdir>
        </command>
        <command mode="bazel_release">
            <program>bazel</program>
            <args>build --config linux_x64_rel //...</args>
            <workingdir>.</workingdir>
        </command>

<!--        &lt;!&ndash; Debug build &ndash;&gt;-->
<!--        <command mode="debug">-->
<!--            <program>/bin/bash</program>-->
<!--            <args>./build.sh &#45;&#45;debug</args>-->
<!--            <workingdir>.</workingdir>-->
<!--        </command>-->

<!--        &lt;!&ndash; Coverage build &ndash;&gt;-->
<!--        <command mode="coverage">-->
<!--            <program>/bin/bash</program>-->
<!--            <args>./build.sh &#45;&#45;clean &#45;&#45;bullseye &#45;&#45;release</args>-->
<!--            <workingdir>.</workingdir>-->
<!--        </command>-->

<!--        &lt;!&ndash; Static analysis build &ndash;&gt;-->
<!--        <command mode="analysis">-->
<!--            <program>/bin/bash</program>-->
<!--            <args>./build.sh &#45;&#45;no-build &#45;&#45;analysis</args>-->
<!--            <workingdir>.</workingdir>-->
<!--        </command>-->

<!--        &lt;!&ndash; 999 version Build&ndash;&gt;-->
<!--        <command mode="999">-->
<!--            <program>/bin/bash</program>-->
<!--            <args>./build.sh &#45;&#45;clean &#45;&#45;999 &#45;&#45;no-unittest &#45;&#45;release</args>-->
<!--            <workingdir>.</workingdir>-->
<!--        </command>-->

<!--        &lt;!&ndash; 060 version Build&ndash;&gt;-->
<!--        <command mode="060">-->
<!--            <program>/bin/bash</program>-->
<!--            <args>./build.sh &#45;&#45;clean &#45;&#45;060 &#45;&#45;no-unittest &#45;&#45;release</args>-->
<!--            <workingdir>.</workingdir>-->
<!--        </command>-->
    </buildcommands>
    <publish>
        <workingdir>.</workingdir>

        <!-- Release -->
        <release-asset artifact-path="sspl-base/SDDS-COMPONENT" source-dir="output/SDDS-COMPONENT" mode="release"/>
        <release-asset artifact-path="sspl-base/RA-SDDS-COMPONENT" source-dir="output/RA-SDDS-COMPONENT"
                       mode="release"/>
        <release-asset artifact-path="sspl-base/SDDS3-PACKAGE" source-dir="output/SDDS3-PACKAGE" mode="release"/>
        <release-asset artifact-path="sspl-base/RA-SDDS3-PACKAGE" source-dir="output/RA-SDDS3-PACKAGE" mode="release"/>
        <release-asset artifact-path="sspl-base/base-symbols" source-dir="output/base-symbols" mode="release"/>
        <release-asset artifact-path="sspl-base/ra-symbols" source-dir="output/ra-symbols" mode="release"/>

        <build-asset artifact-path="sspl-base/openssl" source-dir="/build/redist/openssl" mode="release"/>
        <build-asset artifact-path="sspl-base/pluginapi" source-dir="output" mode="release">
            <include glob="pluginapi.tar.gz"/>
        </build-asset>
        <build-asset artifact-path="sspl-base/cmcsrouterapi" source-dir="output" mode="release">
            <include glob="cmcsrouterapi.tar.gz"/>
        </build-asset>
        <build-asset artifact-path="sspl-base/mcs" source-dir="output" mode="release">
            <include glob="mcs.tar.gz"/>
        </build-asset>
        <build-asset artifact-path="sspl-base/system_test" source-dir="output" mode="release">
            <include glob="SystemProductTestOutput.tar.gz"/>
        </build-asset>
        <build-asset artifact-path="sspl-base/fake-management" source-dir="testUtils/SupportFiles/FakeManagement" mode="release"/>

        <!-- coverage(bullseye) -->
        <build-asset artifact-path="sspl-base-coverage/SDDS-COMPONENT" source-dir="output/SDDS-COMPONENT" mode="coverage"/>
        <build-asset artifact-path="sspl-base-coverage/RA-SDDS-COMPONENT" source-dir="output/RA-SDDS-COMPONENT" mode="coverage"/>
        <build-asset artifact-path="sspl-base-coverage/SDDS3-PACKAGE" source-dir="output/SDDS3-PACKAGE" mode="coverage"/>
        <build-asset artifact-path="sspl-base-coverage/RA-SDDS3-PACKAGE" source-dir="output/RA-SDDS3-PACKAGE" mode="coverage"/>
        <build-asset artifact-path="sspl-base-coverage/openssl" source-dir="/build/redist/openssl" mode="coverage"/>
        <build-asset artifact-path="sspl-base-coverage/pluginapi" source-dir="output" mode="coverage">
            <include glob="pluginapi.tar.gz"/>
        </build-asset>
        <build-asset artifact-path="sspl-base-coverage/mcs" source-dir="output" mode="coverage">
            <include glob="mcs.tar.gz"/>
        </build-asset>
        <build-asset artifact-path="sspl-base-coverage/system_test" source-dir="output" mode="coverage">
            <include glob="SystemProductTestOutput.tar.gz"/>
            <include glob="symbols"/>
        </build-asset>
        <build-asset artifact-path="sspl-base-coverage/build_log" source-dir="log" mode="coverage"/>

        <build-asset artifact-path="sspl-base-coverage/unittest-htmlreport" source-dir="output/coverage/sspl-base-unittest" mode="coverage"/>
        <build-asset artifact-path="sspl-base-coverage/covfile" source-dir="output/" mode="coverage">
            <include glob="./*.cov"/>
        </build-asset>

        <!-- Analysis -->
        <build-asset artifact-path="sspl-base/analysis" source-dir="output/analysis" mode="analysis"/>
        <build-asset artifact-path="sspl-base/analysis_build_log" source-dir="log" mode="analysis"/>

        <!-- 999 -->
        <release-asset artifact-path="sspl-base-999/SDDS-COMPONENT" source-dir="output/SDDS-COMPONENT" mode="999"/>
        <release-asset artifact-path="sspl-base-999/SDDS3-PACKAGE" source-dir="output/SDDS3-PACKAGE" mode="999"/>
        <release-asset artifact-path="sspl-base-999/RA-SDDS-COMPONENT" source-dir="output/RA-SDDS-COMPONENT" mode="999"/>
        <release-asset artifact-path="sspl-base-999/RA-SDDS3-PACKAGE" source-dir="output/RA-SDDS3-PACKAGE" mode="999"/>
        <!-- 060 -->
        <release-asset artifact-path="sspl-base-060/SDDS-COMPONENT" source-dir="output/SDDS-COMPONENT" mode="060"/>
        <release-asset artifact-path="sspl-base-060/SDDS3-PACKAGE" source-dir="output/SDDS3-PACKAGE" mode="060"/>

        <!--TODO: LINUXDAR-6488 - get all build modes working with old artifact path-->
        <!-- debug -->
        <build-asset artifact-path="sspl-base-debug/SDDS-COMPONENT" source-dir="output/SDDS-COMPONENT" mode="debug"/>
        <build-asset artifact-path="sspl-base-debug/RA-SDDS-COMPONENT" source-dir="output/RA-SDDS-COMPONENT" mode="debug"/>
        <build-asset artifact-path="sspl-base-debug/SDDS3-PACKAGE" source-dir="output/SDDS3-PACKAGE" mode="debug"/>
        <build-asset artifact-path="sspl-base-debug/RA-SDDS3-COMPONENT" source-dir="output/RA-SDDS-COMPONENT" mode="debug"/>

        <build-asset artifact-path="sspl-base-debug/openssl" source-dir="/build/redist/openssl" mode="debug"/>
        <build-asset artifact-path="sspl-base-debug/pluginapi" source-dir="output" mode="debug">
            <include glob="pluginapi.tar.gz"/>
        </build-asset>
        <build-asset artifact-path="sspl-base-debug/cmcsrouterapi" source-dir="output" mode="debug">
            <include glob="cmcsrouterapi.tar.gz"/>
        </build-asset>
        <build-asset artifact-path="sspl-base-debug/mcs" source-dir="output" mode="debug">
            <include glob="mcs.tar.gz"/>
        </build-asset>
        <build-asset artifact-path="sspl-base-debug/system_test" source-dir="output" mode="debug">
            <include glob="SystemProductTestOutput.tar.gz"/>
            <include glob="symbols"/>
        </build-asset>
        <build-asset artifact-path="sspl-base-debug/fake-management" source-dir="testUtils/SupportFiles/FakeManagement" mode="debug"/>

        <publishbranches>master,feature,release,develop,bugfix,debug</publishbranches>
    </publish>
</package>
