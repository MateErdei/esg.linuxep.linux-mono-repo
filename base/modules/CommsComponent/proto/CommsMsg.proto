syntax = "proto2";

package CommsMsgProto;

/*
message KeyValue
{
    required string Key = 1; 
    required string Value = 2; 
}
*/

message HttpRequest
{
    optional string requestType = 1;
    optional string server = 2; 
    optional string resourcePath = 3;
    optional bytes bodyContent = 4; 
    // optional string bodyFilePath = 5; This is to be used only for the serialization/deserialization to json between the communication with the distributor and the plugins.
    optional int64 port = 6; 
    // optional bool proxyAllowed = 7; 
    // optional int64 timeout = 8;
    repeated string headers = 9; 
    // repeated KeyValue params = 10;  
    optional string certPath = 12; 
    optional string filePath = 15;
}

message HttpResponse
{
    optional int64 httpCode = 1; 
    optional string description = 2; 
    optional bytes bodyContent = 3; 
    optional int64 exitCode = 10; 
    // optional string bodyFilePath = 4; 
    // repeated KeyValue headers = 8;
}


message CommsMsg{
    optional string id = 1; 
    oneof content {
        HttpRequest httpRequest = 10; 
        HttpResponse httpResponse = 11; 
    } 
}
