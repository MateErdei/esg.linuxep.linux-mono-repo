// Copyright 2019-2023 Sophos Limited. All rights reserved.

#pragma once

#include "ISystemTelemetryCollector.h"
#include "ITelemetryProvider.h"

#include "Common/FileSystem/IFileSystem.h"
#include "Common/TelemetryHelperImpl/TelemetryHelper.h"

#include <utility>
#include <variant>

namespace Telemetry
{
    /**
     * Class for reporting system telemetry as JSON from an internal data structure (generated by the system telemetry
     * collector interface).
     */
    class SystemTelemetryReporter : public ITelemetryProvider
    {
    public:
        explicit SystemTelemetryReporter(std::unique_ptr<ISystemTelemetryCollector> systemTelemetryCollector);

        std::string getName() override { return "system-telemetry"; }
        std::string getTelemetry() override;

    private:
        static void getSimpleTelemetry(
            Common::Telemetry::TelemetryHelper& jsonConverter,
            const std::map<std::string, TelemetryItem>& systemTelemetryObjects);

        static void getArraysTelemetry(
            Common::Telemetry::TelemetryHelper& jsonConverter,
            const std::map<std::string, std::vector<TelemetryItem>>& systemTelemetryArrays);

        std::unique_ptr<ISystemTelemetryCollector> m_systemTelemetryCollector;
    };
} // namespace Telemetry
