
INCLUDE_DIRECTORIES(${PROTOBUF_INCLUDE_DIR})
include_directories(${CMAKE_CURRENT_BINARY_DIR})

set( ENV{LD_LIBRARY_PATH} ${Protobuf_LD_LIBRARY_PATH} )
#set(Protobuf_PROTOC_EXECUTABLE ${CMAKE_BINARY_DIR}/protoc.sh)

if(EXISTS ${PROTOBUF_PROTOC_EXECUTABLE})
    message(STATUS "Found PROTOBUF Compiler: ${PROTOBUF_PROTOC_EXECUTABLE}")
else()
    message(FATAL_ERROR "Could not find PROTOBUF Compiler")
endif()

PROTOBUF_GENERATE_CPP(PLUGIN_API_MESSAGE_PROTO_SRC PLUGIN_API_MESSAGE_PROTO_H proto/PluginAPIMessage.proto)
PROTOBUF_GENERATE_PYTHON(PLUGIN_API_MESSAGE_PROTO_PYTHON proto/PluginAPIMessage.proto)

add_custom_target(generatePluginApiMessageProto
        ${CMAKE_COMMAND} -E copy_if_different
        ${PLUGIN_API_MESSAGE_PROTO_PYTHON} ${CMAKE_CURRENT_BINARY_DIR}/
        DEPENDS ${PLUGIN_API_MESSAGE_PROTO_PYTHON})