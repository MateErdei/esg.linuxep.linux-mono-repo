<?xml version="1.0" encoding="utf-8"?>
<package
  name="sspl-warehouse"
  version="1.0.0">

  <!-- Components are fetched directly by the warehouse generation scripts according to the specs in the
         warehouse definition file. These inputs are the tools that are needed and a couple of oddball
         components.
    -->

    <inputs>
      <workingdir>.</workingdir>

      <!-- Packages for normal release-package build -->

      <build-asset project="winep" repo="liveterminal" mode="release-package,release-package-edr-999,release-package-mdr-999">
        <development-version branch="develop"/>
        <include artifact-path="liveterminal/sdds" dest-dir="redist/liveterminal"/>
      </build-asset>
      <build-asset project="linuxep" repo="everest-base" mode="release-package,release-package-edr-999,release-package-mdr-999">
        <development-version branch="develop"/>
        <include artifact-path="sspl-base/SDDS-COMPONENT" dest-dir="redist/sspl-base"/>
      </build-asset>
      <build-asset project="linuxep" repo="sspl-plugin-edr-component" mode="release-package,release-package-mdr-999">
        <development-version branch="develop"/>
        <include artifact-path="edr/SDDS-COMPONENT" dest-dir="redist/sspl-plugin-edr-component"/>
      </build-asset>
      <build-asset project="linuxep" repo="sspl-plugin-mdr-componentsuite" mode="release-package,release-package-edr-999">
        <development-version branch="develop"/>
        <include artifact-path="output/SDDS-SSPL-DBOS-COMPONENT" dest-dir="redist/sspl-plugin-mdr-componentsuite/SDDS-SSPL-DBOS-COMPONENT"/>
        <include artifact-path="output/SDDS-SSPL-MDR-COMPONENT" dest-dir="redist/sspl-plugin-mdr-componentsuite/SDDS-SSPL-MDR-COMPONENT"/>
        <include artifact-path="output/SDDS-SSPL-MDR-COMPONENT-SUITE" dest-dir="redist/sspl-plugin-mdr-componentsuite/SDDS-SSPL-MDR-COMPONENT-SUITE"/>
        <include artifact-path="output/SDDS-SSPL-OSQUERY-COMPONENT" dest-dir="redist/sspl-plugin-mdr-componentsuite/SDDS-SSPL-OSQUERY-COMPONENT"/>
      </build-asset>

      <!-- Packages for edr-999 -->

      <build-asset project="linuxep" repo="sspl-plugin-edr-component" mode="release-package-edr-999,release-package-edr-mdr-999">
        <development-version branch="feature/EDR-999-build"/>
        <include artifact-path="edr/SDDS-COMPONENT" dest-dir="redist/sspl-plugin-edr-component"/>
      </build-asset>

      <!-- Packages for mdr-999 -->

      <build-asset project="linuxep" repo="sspl-plugin-mdr-componentsuite" mode="release-package-mdr-999,release-package-edr-mdr-999">
        <development-version branch="feature/mdr-component-999"/>
        <!-- Update once mdr-component-999 updated? -->
        <include artifact-path="output" dest-dir="redist/sspl-plugin-mdr-componentsuite"/>
      </build-asset>

      <!-- Packages for edr-mdr-999 -->

      <build-asset project="winep" repo="liveterminal" mode="release-package-edr-mdr-999">
        <development-version branch="feature/linux-999-build"/>
        <include artifact-path="liveterminal/sdds" dest-dir="redist/liveterminal"/>
      </build-asset>
      <build-asset project="linuxep" repo="everest-base" mode="release-package-edr-mdr-999">
        <development-version branch="feature/Base-999-build"/>
        <include artifact-path="sspl-base/SDDS-COMPONENT" dest-dir="redist/sspl-base"/>
      </build-asset>

      <!-- Common Packages -->

      <build-asset project="linuxep" repo="sspl-plugin-edr-componentsuite">
        <development-version branch="develop"/>
        <include artifact-path="sspl-componentsuite/SDDS-SSPL-COMPONENT-SUITE" dest-dir="redist/sspl-plugin-edr-componentsuite"/>
      </build-asset>
      <build-asset project="linuxep" repo="sspl-plugin-anti-virus">
        <development-version branch="master"/>
        <include artifact-path="sspl-plugin-anti-virus/SDDS-COMPONENT" dest-dir="redist/sspl-plugin-anti-virus"/>
      </build-asset>
      <build-asset project="linuxep" repo="sspl-flags">
        <development-version branch="develop"/>
        <include artifact-path="sspl-flags/SDDS-SSPL-FLAGS" dest-dir="redist/flags2"/>
      </build-asset>

      <build-asset project="em" repo="esg">
        <development-version branch="develop"/>
        <include artifact-path="scheduled-query-pack-sdds" dest-dir="redist/scheduled-query-pack-sdds"/>
      </build-asset>

    </inputs>

    <buildcommands>
      <command>
        <program>py.exe</program>
        <args>-3 -u -m pip install -r requirements.txt --index-url=https://authproxy.sophos-ops.com/artifactory/api/pypi/esg-pypi-trusted/simple</args>
        <workingdir>src</workingdir>
      </command>
      <command>
        <program>py.exe</program>
        <args>-3 -u prepare.py</args>
        <workingdir>src</workingdir>
      </command>
      <command>
        <program>py.exe</program>
        <args>-3 -u warehouse_sign\patch_renderer_signing.py</args>
        <workingdir>src</workingdir>
      </command>
      <command mode="release-package">
        <program>py.exe</program>
        <args>-3 GenerateWarehouse.py dict-en.xml ..\def\supplements-warehouse-def.yaml ..\def\cloud-warehouse-def.yaml</args>
        <workingdir>src</workingdir>
      </command>
      <command mode="release-package-edr-999">
        <program>py.exe</program>
        <args>-3 GenerateWarehouse.py dict-en.xml ..\def\supplements-warehouse-def.yaml ..\def\cloud-warehouse-def-edr-999.yaml</args>
        <workingdir>src</workingdir>
      </command>
      <command mode="release-package-mdr-999">
        <program>py.exe</program>
        <args>-3 GenerateWarehouse.py dict-en.xml ..\def\supplements-warehouse-def.yaml ..\def\cloud-warehouse-def-mdr-999.yaml</args>
        <workingdir>src</workingdir>
      </command>
      <command mode="release-package-edr-mdr-999">
        <program>py.exe</program>
        <args>-3 GenerateWarehouse.py dict-en.xml ..\def\supplements-warehouse-def.yaml ..\def\cloud-warehouse-def-edr-mdr-999.yaml</args>
        <workingdir>src</workingdir>
      </command>
    </buildcommands>

  <publish>
<!--    <build-asset artifact-path="warehouse" source-dir="output/warehouse">-->
<!--      <include glob="update/**"/>-->
<!--      <include glob="content/**"/>-->
<!--    </build-asset>-->
    <build-asset artifact-path="develop/warehouse" source-dir="output\warehouse\content" mode="release-package"/>
    <build-asset artifact-path="develop/customer" source-dir="output\warehouse\customer" mode="release-package"/>
    <build-asset artifact-path="develop/def" source-dir="output\def" mode="release-package"/>
    <build-asset artifact-path="develop/logs" source-dir="logs" mode="release-package"/>

    <build-asset artifact-path="edr-999/warehouse" source-dir="output\warehouse\content" mode="release-package-edr-999"/>
    <build-asset artifact-path="edr-999/customer" source-dir="output\warehouse\customer" mode="release-package-edr-999"/>
    <build-asset artifact-path="edr-999/def" source-dir="output\def" mode="release-package-edr-999"/>
    <build-asset artifact-path="edr-999/logs" source-dir="logs" mode="release-package-edr-999"/>

    <build-asset artifact-path="edr-mdr-999/warehouse" source-dir="output\warehouse\content" mode="release-package-edr-mdr-999"/>
    <build-asset artifact-path="edr-mdr-999/customer" source-dir="output\warehouse\customer" mode="release-package-edr-mdr-999"/>
    <build-asset artifact-path="edr-mdr-999/def" source-dir="output\def" mode="release-package-edr-mdr-999"/>
    <build-asset artifact-path="edr-mdr-999/logs" source-dir="logs" mode="release-package-edr-mdr-999"/>

    <build-asset artifact-path="mdr-999/warehouse" source-dir="output\warehouse\content" mode="release-package-mdr-999"/>
    <build-asset artifact-path="mdr-999/customer" source-dir="output\warehouse\customer" mode="release-package-mdr-999"/>
    <build-asset artifact-path="mdr-999/def" source-dir="output\def" mode="release-package-mdr-999"/>
    <build-asset artifact-path="mdr-999/logs" source-dir="logs" mode="release-package-mdr-999"/>

    <logs name="generate-warehouse" source-dir="logs" mode="release-package"/>

  </publish>

</package>
