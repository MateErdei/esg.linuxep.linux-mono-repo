<?xml version="1.0" encoding="utf-8"?>
<package name="sspl-warehouse" version="1.0.0">
    <!-- Components are fetched directly by the warehouse generation scripts according to the specs in the
         warehouse definition file. These inputs are the tools that are needed and a couple of oddball
         components.

         All modes:
            dev
            prod
            999
    -->

    <inputs>
        <workingdir>.</workingdir>
        
        <!-- Base -->
        <intermediate artifact-path="base/linux_x64_rel/installer" dest-dir="sdds/redist/base/latest/x64" mode="dev,prod,999"/>
        <intermediate artifact-path="base/linux_arm64_rel/installer" dest-dir="sdds/redist/base/latest/arm64" mode="dev,prod,999"/>

        <!-- Response Action -->
        <intermediate artifact-path="response_actions/linux_x64_rel/installer" dest-dir="sdds/redist/responseactions/latest/x64" mode="dev,prod,999"/>
        <intermediate artifact-path="response_actions/linux_arm64_rel/installer" dest-dir="sdds/redist/responseactions/latest/arm64" mode="dev,prod,999"/>

        <!-- EDR -->
        <intermediate artifact-path="edr/linux_x64_rel/installer" dest-dir="sdds/redist/edr/latest/x64" mode="dev,prod,999"/>
        <intermediate artifact-path="edr/linux_arm64_rel/installer" dest-dir="sdds/redist/edr/latest/arm64" mode="dev,prod,999"/>
        <!-- Event Journaler -->
        <intermediate artifact-path="eventjournaler/linux_x64_rel/installer" dest-dir="sdds/redist/event-journaler/latest/x64" mode="dev,prod,999"/>
        <intermediate artifact-path="eventjournaler/linux_arm64_rel/installer" dest-dir="sdds/redist/event-journaler/latest/arm64" mode="dev,prod,999"/>
        <!-- AV -->
        <intermediate artifact-path="av/linux_x64_rel/installer" dest-dir="sdds/redist/av/latest/x64" mode="dev,prod,999"/>
        <intermediate artifact-path="av/linux_arm64_rel/installer" dest-dir="sdds/redist/av/latest/arm64" mode="dev,prod,999"/>

        <!-- Live Response -->
        <intermediate artifact-path="liveterminal/linux_x64_rel/installer" dest-dir="sdds/redist/liveresponse/latest/x64" mode="dev,prod,999"/>
        <intermediate artifact-path="liveterminal/linux_arm64_rel/installer" dest-dir="sdds/redist/liveresponse/latest/arm64" mode="dev,prod,999"/>

        <!-- Device Isolation -->
        <intermediate artifact-path="deviceisolation/linux_x64_rel/installer" dest-dir="sdds/redist/deviceisolation/latest/x64" mode="dev,prod,999"/>
        <intermediate artifact-path="deviceisolation/linux_arm64_rel/installer" dest-dir="sdds/redist/deviceisolation/latest/arm64" mode="dev,prod,999"/>

        <build-asset project="linuxep" repo="runtimedetections" mode="dev,999">
            <release-version branch="release--sensor--version_5_8_0" build-id="20240130100803-2a593831fadbfd8da515bfc664dae43f41e41f3f-tVrcCA"/>
            <development-version branch="develop"/>
            <include artifact-path="SDDS-COMPONENT" dest-dir="sdds/redist/runtimedetections/latest/x64" mode="dev,999"/>
            <include artifact-path="SDDS-COMPONENT-arm64" dest-dir="sdds/redist/runtimedetections/latest/arm64" mode="dev,999"/>
        </build-asset>


        <!--supplements-->
        <build-asset project="linuxep" repo="runtimedetections" mode="dev,999,prod">
            <release-version branch="release--content--version_5_6_2" build-id="20240104192640-89876f5db7fc0bc16a8e4888168a12fce8c852f2-DpkX97"/>
            <include artifact-path="sspl-rdrules-scit" dest-dir="sdds/inputs/supplements/RuntimeDetectionRules"/>
        </build-asset>
        <build-asset project="em" repo="esg" >
            <release-version branch="release/scheduled_query_pack/1.13" build-id="20220824140550-05ec7c0da54e978fa40839ee052374983a4a057a-JbkaIM"/>
            <development-version branch="develop" />
            <include artifact-path="scheduled-query-pack-scit" dest-dir="sdds/inputs/supplements/scheduled-query-pack" mode="dev,prod,999"/>
        </build-asset>
        <build-asset project="linuxep" repo="sspl-flags">
            <release-version branch="release/2024-1" build-id="20240108135852-73bca61800e9e6ed2754b886585b88c712d3b361-92BSgA"/>
            <development-version branch="develop" />
            <include artifact-path="sspl-flags/scit-supplement" dest-dir="sdds/inputs/supplements/sspl-flags" mode="dev,999,prod"/>
        </build-asset>

        <build-asset project="em" repo="esg">
            <release-version branch="release/LIN-2024.1"
                             build-id="20240126142729-3c7d2a07b5a15e34d0057320df5edf5a30406e92-P0pBnJ"/>
            <development-version branch="develop"/>
            <include artifact-path="bazel-tools" dest-dir="."/>
            <include artifact-path="sophlib/BUILD" dest-dir="common/sophlib"/>
            <include artifact-path="sophlib/include" dest-dir="common/sophlib/include/sophlib"/>
            <include artifact-path="sophlib/linux_x64_rel/lib" dest-dir="common/sophlib/linux_x64_release/lib"/>
            <include artifact-path="sophlib/linux_x64_rel/sdds3_tools" dest-dir="imports/internal/sdds3_utils"/>
        </build-asset>
    </inputs>

    <buildcommands>
        <!-- Delete broken symlinks to avoid problems with syncing -->
        <command mode="dev,999,prod">
            <program>bash</program>
            <args>-c '[ -d bazel-out/k8-dbg/bin/sdds/sdds3/package ] &amp;&amp; find bazel-out/k8-dbg/bin/sdds/sdds3/package -xtype l -delete || exit 0'</args>
        </command>
        <command mode="dev,999,prod">
            <program>python3</program>
            <args>makesuites.py</args>
            <workingdir>./sdds/linuxep_suites</workingdir>
        </command>
        <command>
            <program>./build/python.sh</program>
            <args>tools/src/dump_environment/dump_environment.py</args>
        </command>
        <command>
            <program>bash</program>
            <args>./prepare_inputs.sh</args>
        </command>
        <command mode="dev">
            <program>python3</program>
            <args>-u sdds/sdds3/tools/gen_bazel.py --mode dev</args>
        </command>
        <command mode="999">
            <program>python3</program>
            <args>-u sdds/sdds3/tools/gen_bazel.py --mode 999</args>
        </command>
        <command mode="prod">
            <program>python3</program>
            <args>-u sdds/sdds3/tools/gen_bazel.py --mode prod</args>
        </command>
        <command mode="dev,999,prod">
            <program>bazel</program>
            <args>build //sdds/sdds3/... --verbose_failures --spawn_strategy=standalone --distdir /opt/distdir</args>
        </command>
    </buildcommands>

  <publish>
      <!--dev version-->
      <build-asset artifact-path="sdds3-repo" source-dir="bazel-out/k8-dbg/bin/sdds/sdds3" mode="dev">
          <include glob="package/**"/>
          <include glob="suite/**"/>
          <include glob="supplement/**"/>
      </build-asset>
      <release-asset artifact-path="sdds3-launchdarkly" source-dir="sdds/output/launchdarkly" mode="dev">
          <include glob="*.json"/>
      </release-asset>
      <!--999 version-->
      <build-asset artifact-path="sdds3-repo-999" source-dir="bazel-out/k8-dbg/bin/sdds/sdds3" mode="999">
          <include glob="package/**"/>
          <include glob="suite/**"/>
          <include glob="supplement/**"/>
      </build-asset>
      <release-asset artifact-path="sdds3-launchdarkly-999" source-dir="sdds/output/launchdarkly" mode="999">
          <include glob="*.json"/>
      </release-asset>
      <!--prod version-->
      <release-asset artifact-path="prod-sdds3-repo" source-dir="bazel-out/k8-dbg/bin/sdds/sdds3" mode="prod">
          <include glob="package/**"/>
          <include glob="suite/**"/>
      </release-asset>
      <release-asset artifact-path="prod-sdds3-launchdarkly" source-dir="sdds/output/launchdarkly" mode="prod">
          <include glob="*.json"/>
      </release-asset>
      <release-asset artifact-path="prod-sdds3-static-suites" source-dir="sdds/output/prod-sdds3-static-suites" mode="prod,dev">
          <include glob="*.json"/>
      </release-asset>
      <release-asset artifact-path="prod-sdds3-static-suites-999" source-dir="sdds/output/prod-sdds3-static-suites" mode="999">
          <include glob="*.json"/>
      </release-asset>
  </publish>
</package>